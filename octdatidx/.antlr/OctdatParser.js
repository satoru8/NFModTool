// Generated from x:/Repo/NFModTool/octdatidx/Octdat.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';
const serializedATN = [4,1,102,1038,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,
7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,
2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,
20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,
7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,
34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,
2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,
49,7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,
63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,
2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,84,2,85,
7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,7,91,2,92,7,
92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,7,98,2,99,7,99,
2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,7,104,2,105,7,105,
2,106,7,106,2,107,7,107,2,108,7,108,2,109,7,109,2,110,7,110,2,111,7,111,
2,112,7,112,2,113,7,113,2,114,7,114,2,115,7,115,2,116,7,116,2,117,7,117,
2,118,7,118,2,119,7,119,2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,123,
2,124,7,124,2,125,7,125,2,126,7,126,2,127,7,127,2,128,7,128,2,129,7,129,
2,130,7,130,2,131,7,131,2,132,7,132,2,133,7,133,2,134,7,134,2,135,7,135,
2,136,7,136,2,137,7,137,2,138,7,138,2,139,7,139,2,140,7,140,2,141,7,141,
2,142,7,142,2,143,7,143,2,144,7,144,1,0,5,0,292,8,0,10,0,12,0,295,9,0,1,
1,1,1,1,1,1,1,1,2,5,2,302,8,2,10,2,12,2,305,9,2,1,3,1,3,1,3,1,3,1,3,1,3,
1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,
1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,3,3,361,8,3,1,4,1,4,1,4,
1,5,1,5,1,5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,10,
1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,
13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,
1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,
18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,
1,20,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,
23,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,
1,27,1,27,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,
31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,34,1,34,1,34,
1,34,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,38,1,
38,1,38,1,38,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,
1,42,1,42,1,42,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,
44,1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,47,
1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,50,1,
50,1,50,1,50,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,
1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,57,1,57,1,
57,1,57,1,57,1,57,1,58,1,58,1,58,5,58,608,8,58,10,58,12,58,611,9,58,1,59,
1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,3,61,627,
8,61,1,62,1,62,3,62,631,8,62,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,65,
1,65,1,65,5,65,644,8,65,10,65,12,65,647,9,65,1,66,1,66,1,66,1,66,1,67,1,
67,1,67,3,67,656,8,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,3,68,665,8,68,1,
69,1,69,1,69,1,69,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,72,1,72,1,72,
1,72,1,73,1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,76,1,
76,1,76,5,76,698,8,76,10,76,12,76,701,9,76,1,77,1,77,1,77,1,77,1,78,1,78,
1,78,3,78,710,8,78,1,79,1,79,3,79,714,8,79,1,80,1,80,1,80,1,80,1,81,1,81,
1,81,1,81,1,82,1,82,1,82,5,82,727,8,82,10,82,12,82,730,9,82,1,83,1,83,1,
83,1,83,1,83,1,84,1,84,1,84,3,84,740,8,84,1,85,1,85,1,85,1,85,1,85,3,85,
747,8,85,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,87,1,88,1,88,1,88,1,88,1,89,
1,89,1,89,1,89,1,90,1,90,1,90,5,90,768,8,90,10,90,12,90,771,9,90,1,91,1,
91,1,91,1,91,1,92,1,92,1,92,3,92,780,8,92,1,93,1,93,3,93,784,8,93,1,94,1,
94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,96,1,96,1,96,5,96,799,8,96,
10,96,12,96,802,9,96,1,97,1,97,1,97,5,97,807,8,97,10,97,12,97,810,9,97,1,
98,1,98,1,98,1,98,1,99,1,99,1,99,3,99,819,8,99,1,100,1,100,1,100,1,100,1,
100,3,100,826,8,100,1,101,1,101,1,101,1,101,1,102,1,102,1,102,1,102,1,103,
1,103,1,103,1,103,1,104,1,104,1,104,1,104,1,105,1,105,1,105,1,105,1,106,
1,106,1,106,5,106,851,8,106,10,106,12,106,854,9,106,1,107,1,107,1,108,1,
108,1,108,5,108,861,8,108,10,108,12,108,864,9,108,1,109,1,109,1,109,1,109,
1,110,1,110,1,110,3,110,873,8,110,1,111,1,111,1,111,3,111,878,8,111,1,112,
1,112,1,112,1,112,1,113,1,113,1,113,1,113,1,114,1,114,1,114,1,114,1,115,
1,115,1,115,3,115,895,8,115,1,116,1,116,3,116,899,8,116,1,117,1,117,1,118,
1,118,1,118,1,118,1,118,1,118,1,119,1,119,1,119,5,119,912,8,119,10,119,12,
119,915,9,119,1,120,1,120,1,121,1,121,1,121,5,121,922,8,121,10,121,12,121,
925,9,121,1,122,1,122,1,122,1,122,1,123,1,123,1,123,3,123,934,8,123,1,124,
1,124,1,124,3,124,939,8,124,1,125,1,125,1,125,1,125,1,126,1,126,1,126,1,
126,1,126,1,126,1,127,1,127,1,127,1,127,1,128,1,128,1,128,5,128,958,8,128,
10,128,12,128,961,9,128,1,129,1,129,1,130,1,130,1,130,5,130,968,8,130,10,
130,12,130,971,9,130,1,131,1,131,1,131,1,131,1,132,1,132,1,132,3,132,980,
8,132,1,133,1,133,1,133,1,133,1,133,3,133,987,8,133,1,134,1,134,1,134,1,
134,1,135,1,135,1,135,1,135,1,136,1,136,1,136,1,136,1,137,1,137,1,137,1,
137,1,138,1,138,1,138,1,138,1,139,1,139,1,139,5,139,1012,8,139,10,139,12,
139,1015,9,139,1,140,1,140,1,140,1,140,1,141,1,141,1,141,3,141,1024,8,141,
1,142,1,142,3,142,1028,8,142,1,143,1,143,1,143,1,143,1,144,1,144,1,144,1,
144,1,144,0,0,145,0,2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,
40,42,44,46,48,50,52,54,56,58,60,62,64,66,68,70,72,74,76,78,80,82,84,86,
88,90,92,94,96,98,100,102,104,106,108,110,112,114,116,118,120,122,124,126,
128,130,132,134,136,138,140,142,144,146,148,150,152,154,156,158,160,162,
164,166,168,170,172,174,176,178,180,182,184,186,188,190,192,194,196,198,
200,202,204,206,208,210,212,214,216,218,220,222,224,226,228,230,232,234,
236,238,240,242,244,246,248,250,252,254,256,258,260,262,264,266,268,270,
272,274,276,278,280,282,284,286,288,0,0,999,0,293,1,0,0,0,2,296,1,0,0,0,
4,303,1,0,0,0,6,360,1,0,0,0,8,362,1,0,0,0,10,365,1,0,0,0,12,368,1,0,0,0,
14,371,1,0,0,0,16,374,1,0,0,0,18,378,1,0,0,0,20,382,1,0,0,0,22,386,1,0,0,
0,24,390,1,0,0,0,26,396,1,0,0,0,28,400,1,0,0,0,30,406,1,0,0,0,32,412,1,0,
0,0,34,418,1,0,0,0,36,424,1,0,0,0,38,430,1,0,0,0,40,436,1,0,0,0,42,442,1,
0,0,0,44,448,1,0,0,0,46,452,1,0,0,0,48,456,1,0,0,0,50,460,1,0,0,0,52,464,
1,0,0,0,54,468,1,0,0,0,56,472,1,0,0,0,58,476,1,0,0,0,60,480,1,0,0,0,62,484,
1,0,0,0,64,488,1,0,0,0,66,492,1,0,0,0,68,496,1,0,0,0,70,500,1,0,0,0,72,504,
1,0,0,0,74,508,1,0,0,0,76,512,1,0,0,0,78,516,1,0,0,0,80,520,1,0,0,0,82,524,
1,0,0,0,84,528,1,0,0,0,86,534,1,0,0,0,88,540,1,0,0,0,90,546,1,0,0,0,92,550,
1,0,0,0,94,556,1,0,0,0,96,560,1,0,0,0,98,566,1,0,0,0,100,570,1,0,0,0,102,
574,1,0,0,0,104,578,1,0,0,0,106,582,1,0,0,0,108,586,1,0,0,0,110,590,1,0,
0,0,112,594,1,0,0,0,114,598,1,0,0,0,116,604,1,0,0,0,118,612,1,0,0,0,120,
614,1,0,0,0,122,623,1,0,0,0,124,630,1,0,0,0,126,632,1,0,0,0,128,636,1,0,
0,0,130,640,1,0,0,0,132,648,1,0,0,0,134,652,1,0,0,0,136,664,1,0,0,0,138,
666,1,0,0,0,140,670,1,0,0,0,142,674,1,0,0,0,144,678,1,0,0,0,146,682,1,0,
0,0,148,686,1,0,0,0,150,690,1,0,0,0,152,694,1,0,0,0,154,702,1,0,0,0,156,
706,1,0,0,0,158,713,1,0,0,0,160,715,1,0,0,0,162,719,1,0,0,0,164,723,1,0,
0,0,166,731,1,0,0,0,168,736,1,0,0,0,170,746,1,0,0,0,172,748,1,0,0,0,174,
752,1,0,0,0,176,756,1,0,0,0,178,760,1,0,0,0,180,764,1,0,0,0,182,772,1,0,
0,0,184,776,1,0,0,0,186,783,1,0,0,0,188,785,1,0,0,0,190,791,1,0,0,0,192,
795,1,0,0,0,194,803,1,0,0,0,196,811,1,0,0,0,198,815,1,0,0,0,200,825,1,0,
0,0,202,827,1,0,0,0,204,831,1,0,0,0,206,835,1,0,0,0,208,839,1,0,0,0,210,
843,1,0,0,0,212,847,1,0,0,0,214,855,1,0,0,0,216,857,1,0,0,0,218,865,1,0,
0,0,220,869,1,0,0,0,222,877,1,0,0,0,224,879,1,0,0,0,226,883,1,0,0,0,228,
887,1,0,0,0,230,891,1,0,0,0,232,898,1,0,0,0,234,900,1,0,0,0,236,902,1,0,
0,0,238,908,1,0,0,0,240,916,1,0,0,0,242,918,1,0,0,0,244,926,1,0,0,0,246,
930,1,0,0,0,248,938,1,0,0,0,250,940,1,0,0,0,252,944,1,0,0,0,254,950,1,0,
0,0,256,954,1,0,0,0,258,962,1,0,0,0,260,964,1,0,0,0,262,972,1,0,0,0,264,
976,1,0,0,0,266,986,1,0,0,0,268,988,1,0,0,0,270,992,1,0,0,0,272,996,1,0,
0,0,274,1000,1,0,0,0,276,1004,1,0,0,0,278,1008,1,0,0,0,280,1016,1,0,0,0,
282,1020,1,0,0,0,284,1027,1,0,0,0,286,1029,1,0,0,0,288,1033,1,0,0,0,290,
292,3,2,1,0,291,290,1,0,0,0,292,295,1,0,0,0,293,291,1,0,0,0,293,294,1,0,
0,0,294,1,1,0,0,0,295,293,1,0,0,0,296,297,5,92,0,0,297,298,3,4,2,0,298,299,
5,93,0,0,299,3,1,0,0,0,300,302,3,6,3,0,301,300,1,0,0,0,302,305,1,0,0,0,303,
301,1,0,0,0,303,304,1,0,0,0,304,5,1,0,0,0,305,303,1,0,0,0,306,361,3,8,4,
0,307,361,3,10,5,0,308,361,3,12,6,0,309,361,3,14,7,0,310,361,3,16,8,0,311,
361,3,18,9,0,312,361,3,20,10,0,313,361,3,22,11,0,314,361,3,24,12,0,315,361,
3,26,13,0,316,361,3,28,14,0,317,361,3,30,15,0,318,361,3,32,16,0,319,361,
3,34,17,0,320,361,3,36,18,0,321,361,3,38,19,0,322,361,3,40,20,0,323,361,
3,42,21,0,324,361,3,44,22,0,325,361,3,46,23,0,326,361,3,48,24,0,327,361,
3,50,25,0,328,361,3,52,26,0,329,361,3,54,27,0,330,361,3,56,28,0,331,361,
3,58,29,0,332,361,3,60,30,0,333,361,3,62,31,0,334,361,3,64,32,0,335,361,
3,66,33,0,336,361,3,68,34,0,337,361,3,70,35,0,338,361,3,72,36,0,339,361,
3,74,37,0,340,361,3,76,38,0,341,361,3,78,39,0,342,361,3,80,40,0,343,361,
3,82,41,0,344,361,3,84,42,0,345,361,3,86,43,0,346,361,3,88,44,0,347,361,
3,90,45,0,348,361,3,92,46,0,349,361,3,94,47,0,350,361,3,96,48,0,351,361,
3,98,49,0,352,361,3,100,50,0,353,361,3,102,51,0,354,361,3,104,52,0,355,361,
3,106,53,0,356,361,3,108,54,0,357,361,3,110,55,0,358,361,3,112,56,0,359,
361,3,114,57,0,360,306,1,0,0,0,360,307,1,0,0,0,360,308,1,0,0,0,360,309,1,
0,0,0,360,310,1,0,0,0,360,311,1,0,0,0,360,312,1,0,0,0,360,313,1,0,0,0,360,
314,1,0,0,0,360,315,1,0,0,0,360,316,1,0,0,0,360,317,1,0,0,0,360,318,1,0,
0,0,360,319,1,0,0,0,360,320,1,0,0,0,360,321,1,0,0,0,360,322,1,0,0,0,360,
323,1,0,0,0,360,324,1,0,0,0,360,325,1,0,0,0,360,326,1,0,0,0,360,327,1,0,
0,0,360,328,1,0,0,0,360,329,1,0,0,0,360,330,1,0,0,0,360,331,1,0,0,0,360,
332,1,0,0,0,360,333,1,0,0,0,360,334,1,0,0,0,360,335,1,0,0,0,360,336,1,0,
0,0,360,337,1,0,0,0,360,338,1,0,0,0,360,339,1,0,0,0,360,340,1,0,0,0,360,
341,1,0,0,0,360,342,1,0,0,0,360,343,1,0,0,0,360,344,1,0,0,0,360,345,1,0,
0,0,360,346,1,0,0,0,360,347,1,0,0,0,360,348,1,0,0,0,360,349,1,0,0,0,360,
350,1,0,0,0,360,351,1,0,0,0,360,352,1,0,0,0,360,353,1,0,0,0,360,354,1,0,
0,0,360,355,1,0,0,0,360,356,1,0,0,0,360,357,1,0,0,0,360,358,1,0,0,0,360,
359,1,0,0,0,361,7,1,0,0,0,362,363,5,1,0,0,363,364,5,85,0,0,364,9,1,0,0,0,
365,366,5,2,0,0,366,367,5,85,0,0,367,11,1,0,0,0,368,369,5,3,0,0,369,370,
5,85,0,0,370,13,1,0,0,0,371,372,5,4,0,0,372,373,5,85,0,0,373,15,1,0,0,0,
374,375,5,5,0,0,375,376,5,91,0,0,376,377,5,86,0,0,377,17,1,0,0,0,378,379,
5,6,0,0,379,380,5,91,0,0,380,381,5,86,0,0,381,19,1,0,0,0,382,383,5,7,0,0,
383,384,5,91,0,0,384,385,5,86,0,0,385,21,1,0,0,0,386,387,5,8,0,0,387,388,
5,91,0,0,388,389,5,86,0,0,389,23,1,0,0,0,390,391,5,9,0,0,391,392,5,91,0,
0,392,393,5,94,0,0,393,394,3,116,58,0,394,395,5,95,0,0,395,25,1,0,0,0,396,
397,5,10,0,0,397,398,5,91,0,0,398,399,5,87,0,0,399,27,1,0,0,0,400,401,5,
11,0,0,401,402,5,91,0,0,402,403,5,92,0,0,403,404,3,120,60,0,404,405,5,93,
0,0,405,29,1,0,0,0,406,407,5,12,0,0,407,408,5,91,0,0,408,409,5,92,0,0,409,
410,3,122,61,0,410,411,5,93,0,0,411,31,1,0,0,0,412,413,5,13,0,0,413,414,
5,91,0,0,414,415,5,94,0,0,415,416,3,130,65,0,416,417,5,95,0,0,417,33,1,0,
0,0,418,419,5,14,0,0,419,420,5,91,0,0,420,421,5,94,0,0,421,422,3,152,76,
0,422,423,5,95,0,0,423,35,1,0,0,0,424,425,5,15,0,0,425,426,5,91,0,0,426,
427,5,94,0,0,427,428,3,164,82,0,428,429,5,95,0,0,429,37,1,0,0,0,430,431,
5,16,0,0,431,432,5,91,0,0,432,433,5,92,0,0,433,434,3,168,84,0,434,435,5,
93,0,0,435,39,1,0,0,0,436,437,5,17,0,0,437,438,5,91,0,0,438,439,5,94,0,0,
439,440,3,194,97,0,440,441,5,95,0,0,441,41,1,0,0,0,442,443,5,18,0,0,443,
444,5,91,0,0,444,445,5,94,0,0,445,446,3,212,106,0,446,447,5,95,0,0,447,43,
1,0,0,0,448,449,5,19,0,0,449,450,5,91,0,0,450,451,5,87,0,0,451,45,1,0,0,
0,452,453,5,20,0,0,453,454,5,91,0,0,454,455,5,85,0,0,455,47,1,0,0,0,456,
457,5,21,0,0,457,458,5,91,0,0,458,459,5,87,0,0,459,49,1,0,0,0,460,461,5,
22,0,0,461,462,5,91,0,0,462,463,5,87,0,0,463,51,1,0,0,0,464,465,5,23,0,0,
465,466,5,91,0,0,466,467,5,87,0,0,467,53,1,0,0,0,468,469,5,24,0,0,469,470,
5,91,0,0,470,471,5,87,0,0,471,55,1,0,0,0,472,473,5,25,0,0,473,474,5,91,0,
0,474,475,5,88,0,0,475,57,1,0,0,0,476,477,5,26,0,0,477,478,5,91,0,0,478,
479,5,88,0,0,479,59,1,0,0,0,480,481,5,27,0,0,481,482,5,91,0,0,482,483,5,
85,0,0,483,61,1,0,0,0,484,485,5,28,0,0,485,486,5,91,0,0,486,487,5,85,0,0,
487,63,1,0,0,0,488,489,5,29,0,0,489,490,5,91,0,0,490,491,5,87,0,0,491,65,
1,0,0,0,492,493,5,30,0,0,493,494,5,91,0,0,494,495,5,87,0,0,495,67,1,0,0,
0,496,497,5,31,0,0,497,498,5,91,0,0,498,499,5,90,0,0,499,69,1,0,0,0,500,
501,5,32,0,0,501,502,5,91,0,0,502,503,5,90,0,0,503,71,1,0,0,0,504,505,5,
33,0,0,505,506,5,91,0,0,506,507,5,88,0,0,507,73,1,0,0,0,508,509,5,34,0,0,
509,510,5,91,0,0,510,511,5,85,0,0,511,75,1,0,0,0,512,513,5,35,0,0,513,514,
5,91,0,0,514,515,5,87,0,0,515,77,1,0,0,0,516,517,5,36,0,0,517,518,5,91,0,
0,518,519,5,88,0,0,519,79,1,0,0,0,520,521,5,37,0,0,521,522,5,91,0,0,522,
523,5,88,0,0,523,81,1,0,0,0,524,525,5,38,0,0,525,526,5,91,0,0,526,527,5,
85,0,0,527,83,1,0,0,0,528,529,5,39,0,0,529,530,5,91,0,0,530,531,5,94,0,0,
531,532,3,216,108,0,532,533,5,95,0,0,533,85,1,0,0,0,534,535,5,40,0,0,535,
536,5,91,0,0,536,537,5,92,0,0,537,538,3,230,115,0,538,539,5,93,0,0,539,87,
1,0,0,0,540,541,5,41,0,0,541,542,5,91,0,0,542,543,5,94,0,0,543,544,3,242,
121,0,544,545,5,95,0,0,545,89,1,0,0,0,546,547,5,42,0,0,547,548,5,91,0,0,
548,549,5,87,0,0,549,91,1,0,0,0,550,551,5,43,0,0,551,552,5,91,0,0,552,553,
5,94,0,0,553,554,3,260,130,0,554,555,5,95,0,0,555,93,1,0,0,0,556,557,5,44,
0,0,557,558,5,91,0,0,558,559,5,85,0,0,559,95,1,0,0,0,560,561,5,45,0,0,561,
562,5,91,0,0,562,563,5,94,0,0,563,564,3,278,139,0,564,565,5,95,0,0,565,97,
1,0,0,0,566,567,5,46,0,0,567,568,5,91,0,0,568,569,5,87,0,0,569,99,1,0,0,
0,570,571,5,47,0,0,571,572,5,91,0,0,572,573,5,85,0,0,573,101,1,0,0,0,574,
575,5,48,0,0,575,576,5,91,0,0,576,577,5,87,0,0,577,103,1,0,0,0,578,579,5,
49,0,0,579,580,5,91,0,0,580,581,5,87,0,0,581,105,1,0,0,0,582,583,5,50,0,
0,583,584,5,91,0,0,584,585,5,85,0,0,585,107,1,0,0,0,586,587,5,51,0,0,587,
588,5,91,0,0,588,589,5,88,0,0,589,109,1,0,0,0,590,591,5,52,0,0,591,592,5,
91,0,0,592,593,5,85,0,0,593,111,1,0,0,0,594,595,5,53,0,0,595,596,5,91,0,
0,596,597,5,87,0,0,597,113,1,0,0,0,598,599,5,54,0,0,599,600,5,91,0,0,600,
601,5,94,0,0,601,602,3,180,90,0,602,603,5,95,0,0,603,115,1,0,0,0,604,609,
3,118,59,0,605,606,5,98,0,0,606,608,3,118,59,0,607,605,1,0,0,0,608,611,1,
0,0,0,609,607,1,0,0,0,609,610,1,0,0,0,610,117,1,0,0,0,611,609,1,0,0,0,612,
613,5,85,0,0,613,119,1,0,0,0,614,615,5,2,0,0,615,616,5,85,0,0,616,617,5,
55,0,0,617,618,5,91,0,0,618,619,5,87,0,0,619,620,5,56,0,0,620,621,5,91,0,
0,621,622,5,87,0,0,622,121,1,0,0,0,623,624,5,2,0,0,624,626,5,85,0,0,625,
627,3,124,62,0,626,625,1,0,0,0,626,627,1,0,0,0,627,123,1,0,0,0,628,631,3,
126,63,0,629,631,3,128,64,0,630,628,1,0,0,0,630,629,1,0,0,0,631,125,1,0,
0,0,632,633,5,57,0,0,633,634,5,91,0,0,634,635,5,87,0,0,635,127,1,0,0,0,636,
637,5,58,0,0,637,638,5,91,0,0,638,639,5,88,0,0,639,129,1,0,0,0,640,645,3,
132,66,0,641,642,5,98,0,0,642,644,3,132,66,0,643,641,1,0,0,0,644,647,1,0,
0,0,645,643,1,0,0,0,645,646,1,0,0,0,646,131,1,0,0,0,647,645,1,0,0,0,648,
649,5,92,0,0,649,650,3,134,67,0,650,651,5,93,0,0,651,133,1,0,0,0,652,653,
5,2,0,0,653,655,5,85,0,0,654,656,3,136,68,0,655,654,1,0,0,0,655,656,1,0,
0,0,656,135,1,0,0,0,657,665,3,138,69,0,658,665,3,140,70,0,659,665,3,142,
71,0,660,665,3,144,72,0,661,665,3,146,73,0,662,665,3,148,74,0,663,665,3,
150,75,0,664,657,1,0,0,0,664,658,1,0,0,0,664,659,1,0,0,0,664,660,1,0,0,0,
664,661,1,0,0,0,664,662,1,0,0,0,664,663,1,0,0,0,665,137,1,0,0,0,666,667,
5,59,0,0,667,668,5,91,0,0,668,669,5,86,0,0,669,139,1,0,0,0,670,671,5,60,
0,0,671,672,5,91,0,0,672,673,5,87,0,0,673,141,1,0,0,0,674,675,5,61,0,0,675,
676,5,91,0,0,676,677,5,85,0,0,677,143,1,0,0,0,678,679,5,62,0,0,679,680,5,
91,0,0,680,681,5,88,0,0,681,145,1,0,0,0,682,683,5,63,0,0,683,684,5,91,0,
0,684,685,5,85,0,0,685,147,1,0,0,0,686,687,5,64,0,0,687,688,5,91,0,0,688,
689,5,87,0,0,689,149,1,0,0,0,690,691,5,65,0,0,691,692,5,91,0,0,692,693,5,
87,0,0,693,151,1,0,0,0,694,699,3,154,77,0,695,696,5,98,0,0,696,698,3,154,
77,0,697,695,1,0,0,0,698,701,1,0,0,0,699,697,1,0,0,0,699,700,1,0,0,0,700,
153,1,0,0,0,701,699,1,0,0,0,702,703,5,92,0,0,703,704,3,156,78,0,704,705,
5,93,0,0,705,155,1,0,0,0,706,707,5,2,0,0,707,709,5,85,0,0,708,710,3,158,
79,0,709,708,1,0,0,0,709,710,1,0,0,0,710,157,1,0,0,0,711,714,3,160,80,0,
712,714,3,162,81,0,713,711,1,0,0,0,713,712,1,0,0,0,714,159,1,0,0,0,715,716,
5,66,0,0,716,717,5,91,0,0,717,718,5,85,0,0,718,161,1,0,0,0,719,720,5,67,
0,0,720,721,5,91,0,0,721,722,5,87,0,0,722,163,1,0,0,0,723,728,3,166,83,0,
724,725,5,98,0,0,725,727,3,166,83,0,726,724,1,0,0,0,727,730,1,0,0,0,728,
726,1,0,0,0,728,729,1,0,0,0,729,165,1,0,0,0,730,728,1,0,0,0,731,732,5,68,
0,0,732,733,5,96,0,0,733,734,5,89,0,0,734,735,5,97,0,0,735,167,1,0,0,0,736,
737,5,2,0,0,737,739,5,85,0,0,738,740,3,170,85,0,739,738,1,0,0,0,739,740,
1,0,0,0,740,169,1,0,0,0,741,747,3,172,86,0,742,747,3,174,87,0,743,747,3,
176,88,0,744,747,3,178,89,0,745,747,3,182,91,0,746,741,1,0,0,0,746,742,1,
0,0,0,746,743,1,0,0,0,746,744,1,0,0,0,746,745,1,0,0,0,747,171,1,0,0,0,748,
749,5,69,0,0,749,750,5,91,0,0,750,751,5,86,0,0,751,173,1,0,0,0,752,753,5,
5,0,0,753,754,5,91,0,0,754,755,5,86,0,0,755,175,1,0,0,0,756,757,5,70,0,0,
757,758,5,91,0,0,758,759,5,85,0,0,759,177,1,0,0,0,760,761,5,71,0,0,761,762,
5,91,0,0,762,763,5,88,0,0,763,179,1,0,0,0,764,769,3,182,91,0,765,766,5,98,
0,0,766,768,3,182,91,0,767,765,1,0,0,0,768,771,1,0,0,0,769,767,1,0,0,0,769,
770,1,0,0,0,770,181,1,0,0,0,771,769,1,0,0,0,772,773,5,92,0,0,773,774,3,184,
92,0,774,775,5,93,0,0,775,183,1,0,0,0,776,777,5,2,0,0,777,779,5,85,0,0,778,
780,3,186,93,0,779,778,1,0,0,0,779,780,1,0,0,0,780,185,1,0,0,0,781,784,3,
188,94,0,782,784,3,190,95,0,783,781,1,0,0,0,783,782,1,0,0,0,784,187,1,0,
0,0,785,786,5,72,0,0,786,787,5,91,0,0,787,788,5,94,0,0,788,789,3,192,96,
0,789,790,5,95,0,0,790,189,1,0,0,0,791,792,5,73,0,0,792,793,5,91,0,0,793,
794,5,85,0,0,794,191,1,0,0,0,795,800,5,86,0,0,796,797,5,98,0,0,797,799,5,
86,0,0,798,796,1,0,0,0,799,802,1,0,0,0,800,798,1,0,0,0,800,801,1,0,0,0,801,
193,1,0,0,0,802,800,1,0,0,0,803,808,3,196,98,0,804,805,5,98,0,0,805,807,
3,196,98,0,806,804,1,0,0,0,807,810,1,0,0,0,808,806,1,0,0,0,808,809,1,0,0,
0,809,195,1,0,0,0,810,808,1,0,0,0,811,812,5,92,0,0,812,813,3,198,99,0,813,
814,5,93,0,0,814,197,1,0,0,0,815,816,5,2,0,0,816,818,5,85,0,0,817,819,3,
200,100,0,818,817,1,0,0,0,818,819,1,0,0,0,819,199,1,0,0,0,820,826,3,202,
101,0,821,826,3,204,102,0,822,826,3,206,103,0,823,826,3,208,104,0,824,826,
3,210,105,0,825,820,1,0,0,0,825,821,1,0,0,0,825,822,1,0,0,0,825,823,1,0,
0,0,825,824,1,0,0,0,826,201,1,0,0,0,827,828,5,5,0,0,828,829,5,91,0,0,829,
830,5,86,0,0,830,203,1,0,0,0,831,832,5,64,0,0,832,833,5,91,0,0,833,834,5,
87,0,0,834,205,1,0,0,0,835,836,5,74,0,0,836,837,5,91,0,0,837,838,5,85,0,
0,838,207,1,0,0,0,839,840,5,75,0,0,840,841,5,91,0,0,841,842,5,87,0,0,842,
209,1,0,0,0,843,844,5,76,0,0,844,845,5,91,0,0,845,846,5,88,0,0,846,211,1,
0,0,0,847,852,3,214,107,0,848,849,5,98,0,0,849,851,3,214,107,0,850,848,1,
0,0,0,851,854,1,0,0,0,852,850,1,0,0,0,852,853,1,0,0,0,853,213,1,0,0,0,854,
852,1,0,0,0,855,856,5,85,0,0,856,215,1,0,0,0,857,862,3,218,109,0,858,859,
5,98,0,0,859,861,3,218,109,0,860,858,1,0,0,0,861,864,1,0,0,0,862,860,1,0,
0,0,862,863,1,0,0,0,863,217,1,0,0,0,864,862,1,0,0,0,865,866,5,92,0,0,866,
867,3,220,110,0,867,868,5,93,0,0,868,219,1,0,0,0,869,870,5,2,0,0,870,872,
5,85,0,0,871,873,3,222,111,0,872,871,1,0,0,0,872,873,1,0,0,0,873,221,1,0,
0,0,874,878,3,224,112,0,875,878,3,226,113,0,876,878,3,228,114,0,877,874,
1,0,0,0,877,875,1,0,0,0,877,876,1,0,0,0,878,223,1,0,0,0,879,880,5,74,0,0,
880,881,5,91,0,0,881,882,5,85,0,0,882,225,1,0,0,0,883,884,5,75,0,0,884,885,
5,91,0,0,885,886,5,87,0,0,886,227,1,0,0,0,887,888,5,76,0,0,888,889,5,91,
0,0,889,890,5,88,0,0,890,229,1,0,0,0,891,892,5,2,0,0,892,894,5,85,0,0,893,
895,3,232,116,0,894,893,1,0,0,0,894,895,1,0,0,0,895,231,1,0,0,0,896,899,
3,234,117,0,897,899,3,236,118,0,898,896,1,0,0,0,898,897,1,0,0,0,899,233,
1,0,0,0,900,901,3,38,19,0,901,235,1,0,0,0,902,903,5,77,0,0,903,904,5,91,
0,0,904,905,5,94,0,0,905,906,3,238,119,0,906,907,5,95,0,0,907,237,1,0,0,
0,908,913,3,240,120,0,909,910,5,98,0,0,910,912,3,240,120,0,911,909,1,0,0,
0,912,915,1,0,0,0,913,911,1,0,0,0,913,914,1,0,0,0,914,239,1,0,0,0,915,913,
1,0,0,0,916,917,5,85,0,0,917,241,1,0,0,0,918,923,3,244,122,0,919,920,5,98,
0,0,920,922,3,244,122,0,921,919,1,0,0,0,922,925,1,0,0,0,923,921,1,0,0,0,
923,924,1,0,0,0,924,243,1,0,0,0,925,923,1,0,0,0,926,927,5,92,0,0,927,928,
3,246,123,0,928,929,5,93,0,0,929,245,1,0,0,0,930,931,5,2,0,0,931,933,5,85,
0,0,932,934,3,248,124,0,933,932,1,0,0,0,933,934,1,0,0,0,934,247,1,0,0,0,
935,939,3,250,125,0,936,939,3,252,126,0,937,939,3,254,127,0,938,935,1,0,
0,0,938,936,1,0,0,0,938,937,1,0,0,0,939,249,1,0,0,0,940,941,5,5,0,0,941,
942,5,91,0,0,942,943,5,86,0,0,943,251,1,0,0,0,944,945,5,78,0,0,945,946,5,
91,0,0,946,947,5,94,0,0,947,948,3,256,128,0,948,949,5,95,0,0,949,253,1,0,
0,0,950,951,5,79,0,0,951,952,5,91,0,0,952,953,5,85,0,0,953,255,1,0,0,0,954,
959,3,258,129,0,955,956,5,98,0,0,956,958,3,258,129,0,957,955,1,0,0,0,958,
961,1,0,0,0,959,957,1,0,0,0,959,960,1,0,0,0,960,257,1,0,0,0,961,959,1,0,
0,0,962,963,5,85,0,0,963,259,1,0,0,0,964,969,3,262,131,0,965,966,5,98,0,
0,966,968,3,262,131,0,967,965,1,0,0,0,968,971,1,0,0,0,969,967,1,0,0,0,969,
970,1,0,0,0,970,261,1,0,0,0,971,969,1,0,0,0,972,973,5,92,0,0,973,974,3,264,
132,0,974,975,5,93,0,0,975,263,1,0,0,0,976,977,5,2,0,0,977,979,5,85,0,0,
978,980,3,266,133,0,979,978,1,0,0,0,979,980,1,0,0,0,980,265,1,0,0,0,981,
987,3,268,134,0,982,987,3,270,135,0,983,987,3,272,136,0,984,987,3,274,137,
0,985,987,3,276,138,0,986,981,1,0,0,0,986,982,1,0,0,0,986,983,1,0,0,0,986,
984,1,0,0,0,986,985,1,0,0,0,987,267,1,0,0,0,988,989,5,5,0,0,989,990,5,91,
0,0,990,991,5,85,0,0,991,269,1,0,0,0,992,993,5,80,0,0,993,994,5,91,0,0,994,
995,5,85,0,0,995,271,1,0,0,0,996,997,5,81,0,0,997,998,5,91,0,0,998,999,5,
88,0,0,999,273,1,0,0,0,1000,1001,5,82,0,0,1001,1002,5,91,0,0,1002,1003,5,
87,0,0,1003,275,1,0,0,0,1004,1005,5,83,0,0,1005,1006,5,91,0,0,1006,1007,
5,87,0,0,1007,277,1,0,0,0,1008,1013,3,280,140,0,1009,1010,5,98,0,0,1010,
1012,3,280,140,0,1011,1009,1,0,0,0,1012,1015,1,0,0,0,1013,1011,1,0,0,0,1013,
1014,1,0,0,0,1014,279,1,0,0,0,1015,1013,1,0,0,0,1016,1017,5,92,0,0,1017,
1018,3,282,141,0,1018,1019,5,93,0,0,1019,281,1,0,0,0,1020,1021,5,2,0,0,1021,
1023,5,85,0,0,1022,1024,3,284,142,0,1023,1022,1,0,0,0,1023,1024,1,0,0,0,
1024,283,1,0,0,0,1025,1028,3,286,143,0,1026,1028,3,288,144,0,1027,1025,1,
0,0,0,1027,1026,1,0,0,0,1028,285,1,0,0,0,1029,1030,5,84,0,0,1030,1031,5,
91,0,0,1031,1032,5,85,0,0,1032,287,1,0,0,0,1033,1034,5,67,0,0,1034,1035,
5,91,0,0,1035,1036,5,87,0,0,1036,289,1,0,0,0,39,293,303,360,609,626,630,
645,655,664,699,709,713,728,739,746,769,779,783,800,808,818,825,852,862,
872,877,894,898,913,923,933,938,959,969,979,986,1013,1023,1027];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

const sharedContextCache = new antlr4.atn.PredictionContextCache();

export default class OctdatParser extends antlr4.Parser {

    static grammarFileName = "Octdat.g4";
    static literalNames = [ null, "'id'", "'type'", "'inherit'", "'alias'", 
                            "'name'", "'description'", "'icon'", "'modifierIcon'", 
                            "'attributes'", "'limit'", "'activation'", "'targetType'", 
                            "'actions'", "'ingredients'", "'ingredientColors'", 
                            "'prefab'", "'consumableModifiers'", "'craftAt'", 
                            "'value'", "'dropSound'", "'carryChance'", "'moodBoost'", 
                            "'importance'", "'importanceRange'", "'subject'", 
                            "'defectiveNoun'", "'itemClass'", "'category'", 
                            "'stackLimit'", "'usableStackSize'", "'indoorDecayAfter'", 
                            "'outdoorDecayAfter'", "'temperatureAffectsDecay'", 
                            "'commandType'", "'batch'", "'abstract'", "'cosmeticPrefab'", 
                            "'equipmentSlot'", "'staticBuffs'", "'equipmentCosmetic'", 
                            "'colorSlots'", "'buffScale'", "'stats'", "'salvageAt'", 
                            "'salvage'", "'progressMultiplier'", "'researchEntry'", 
                            "'qualityDifficulty'", "'skillCurve'", "'relatedSubject'", 
                            "'forHerbavoreAnimals'", "'dropItemType'", "'dropItemChance'", 
                            "'sharedMaterials'", "'lengthMinutes'", "'cooldownMinutes'", 
                            "'range'", "'autoEnemies'", "'statusEffectName'", 
                            "'statusEffectMinutes'", "'effect'", "'self'", 
                            "'stat'", "'delta'", "'minutesToMaturity'", 
                            "'filter'", "'count'", "'color'", "'path'", 
                            "'behavior'", "'physics'", "'names'", "'material'", 
                            "'statName'", "'multiplier'", "'good'", "'maskMaterials'", 
                            "'materials'", "'reference'", "'formula'", "'modifier'", 
                            "'min'", "'max'", "'itemType'", null, null, 
                            null, null, null, null, "'='", "'{'", "'}'", 
                            "'['", "']'", "'('", "')'", "','", "':'", "'.'", 
                            "'/'" ];
    static symbolicNames = [ null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, null, null, null, 
                             null, null, null, null, null, "ID", "STRING", 
                             "NUMBER", "BOOLEAN", "COLOR", "DURATION", "ASSIGN", 
                             "LBRACE", "RBRACE", "LBRACKET", "RBRACKET", 
                             "LPAREN", "RPAREN", "COMMA", "COLON", "DOT", 
                             "SLASH", "WS" ];
    static ruleNames = [ "octdatFile", "objectDefinition", "objectBody", 
                         "objectProperty", "idProp", "typeProp", "inheritProp", 
                         "aliasProp", "nameProp", "descriptionProp", "iconProp", 
                         "modifierIconProp", "attributesProp", "limitProp", 
                         "activationProp", "targetTypeProp", "actionsProp", 
                         "ingredientsProp", "colorsProp", "prefabProp", 
                         "consumableModifiersProp", "craftAtProp", "valueProp", 
                         "dropSoundProp", "carryChanceProp", "moodBoostProp", 
                         "importanceProp", "importanceRangeProp", "subjectProp", 
                         "defectiveNounProp", "itemClassProp", "categoryProp", 
                         "stackLimitProp", "usableStackSizeProp", "indoorDecayAfterProp", 
                         "outdoorDecayAfterProp", "temperatureAffectsDecayProp", 
                         "commandTypeProp", "batchProp", "abstractProp", 
                         "cosmeticPrefabProp", "equipmentSlotProp", "staticBuffsProp", 
                         "equipmentCosmeticProp", "colorSlotsProp", "buffScaleProp", 
                         "statsProp", "salvageAtProp", "salvageProp", "progressMultiplierProp", 
                         "researchEntryProp", "qualityDifficultyProp", "skillCurveProp", 
                         "relatedSubjectProp", "forHerbavoreAnimalsProp", 
                         "dropItemTypeProp", "dropItemChanceProp", "sharedMaterialsProp", 
                         "attributeList", "attribute", "activationBody", 
                         "targetTypeBody", "targetTypeProps", "targetTypeRangeProp", 
                         "targetTypeAutoEnemiesProp", "actionList", "action", 
                         "actionBody", "actionProps", "actionStatusEffectNameProp", 
                         "actionStatusEffectMinutesProp", "actionEffectProp", 
                         "actionSelfProp", "actionStatProp", "actionDeltaProp", 
                         "actionMinutesToMaturityProp", "ingredientList", 
                         "ingredient", "ingredientBody", "ingredientProps", 
                         "ingredientFilterProp", "ingredientCountProp", 
                         "colorList", "color", "prefabBody", "prefabProps", 
                         "prefabPathProp", "prefabNameProp", "prefabBehaviorProp", 
                         "prefabPhysicsProp", "sharedMaterialsList", "sharedMaterialProp", 
                         "sharedMaterialBody", "sharedMaterialProps", "sharedMaterialNamesProp", 
                         "sharedMaterialMaterialProp", "nameList", "modifierList", 
                         "modifier", "modifierBody", "modifierProps", "modifierNameProp", 
                         "modifierDeltaProp", "modifierStatNameProp", "modifierMultiplierProp", 
                         "modifierGoodProp", "craftAtList", "craftAt", "staticBuffList", 
                         "staticBuff", "staticBuffBody", "staticBuffProps", 
                         "staticBuffStatNameProp", "staticBuffMultiplierProp", 
                         "staticBuffGoodProp", "equipmentCosmeticBody", 
                         "equipmentCosmeticProps", "equipmentCosmeticPrefabProp", 
                         "equipmentCosmeticMaskMaterialsProp", "maskMaterialList", 
                         "maskMaterial", "colorSlotList", "colorSlot", "colorSlotBody", 
                         "colorSlotProps", "colorSlotNameProp", "colorSlotMaterialsProp", 
                         "colorSlotReferenceProp", "materialList", "material", 
                         "statList", "stat", "statBody", "statProps", "statNameProp", 
                         "statFormulaProp", "statModifierProp", "statMinProp", 
                         "statMaxProp", "salvageList", "salvage", "salvageBody", 
                         "salvageProps", "salvageItemTypeProp", "salvageCountProp" ];

    constructor(input) {
        super(input);
        this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
        this.ruleNames = OctdatParser.ruleNames;
        this.literalNames = OctdatParser.literalNames;
        this.symbolicNames = OctdatParser.symbolicNames;
    }



	octdatFile() {
	    let localctx = new OctdatFileContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 0, OctdatParser.RULE_octdatFile);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 293;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===92) {
	            this.state = 290;
	            this.objectDefinition();
	            this.state = 295;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	objectDefinition() {
	    let localctx = new ObjectDefinitionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 2, OctdatParser.RULE_objectDefinition);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 296;
	        this.match(OctdatParser.LBRACE);
	        this.state = 297;
	        this.objectBody();
	        this.state = 298;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	objectBody() {
	    let localctx = new ObjectBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 4, OctdatParser.RULE_objectBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 303;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while((((_la) & ~0x1f) === 0 && ((1 << _la) & 4294967294) !== 0) || ((((_la - 32)) & ~0x1f) === 0 && ((1 << (_la - 32)) & 8388607) !== 0)) {
	            this.state = 300;
	            this.objectProperty();
	            this.state = 305;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	objectProperty() {
	    let localctx = new ObjectPropertyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 6, OctdatParser.RULE_objectProperty);
	    try {
	        this.state = 360;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 1:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 306;
	            this.idProp();
	            break;
	        case 2:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 307;
	            this.typeProp();
	            break;
	        case 3:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 308;
	            this.inheritProp();
	            break;
	        case 4:
	            this.enterOuterAlt(localctx, 4);
	            this.state = 309;
	            this.aliasProp();
	            break;
	        case 5:
	            this.enterOuterAlt(localctx, 5);
	            this.state = 310;
	            this.nameProp();
	            break;
	        case 6:
	            this.enterOuterAlt(localctx, 6);
	            this.state = 311;
	            this.descriptionProp();
	            break;
	        case 7:
	            this.enterOuterAlt(localctx, 7);
	            this.state = 312;
	            this.iconProp();
	            break;
	        case 8:
	            this.enterOuterAlt(localctx, 8);
	            this.state = 313;
	            this.modifierIconProp();
	            break;
	        case 9:
	            this.enterOuterAlt(localctx, 9);
	            this.state = 314;
	            this.attributesProp();
	            break;
	        case 10:
	            this.enterOuterAlt(localctx, 10);
	            this.state = 315;
	            this.limitProp();
	            break;
	        case 11:
	            this.enterOuterAlt(localctx, 11);
	            this.state = 316;
	            this.activationProp();
	            break;
	        case 12:
	            this.enterOuterAlt(localctx, 12);
	            this.state = 317;
	            this.targetTypeProp();
	            break;
	        case 13:
	            this.enterOuterAlt(localctx, 13);
	            this.state = 318;
	            this.actionsProp();
	            break;
	        case 14:
	            this.enterOuterAlt(localctx, 14);
	            this.state = 319;
	            this.ingredientsProp();
	            break;
	        case 15:
	            this.enterOuterAlt(localctx, 15);
	            this.state = 320;
	            this.colorsProp();
	            break;
	        case 16:
	            this.enterOuterAlt(localctx, 16);
	            this.state = 321;
	            this.prefabProp();
	            break;
	        case 17:
	            this.enterOuterAlt(localctx, 17);
	            this.state = 322;
	            this.consumableModifiersProp();
	            break;
	        case 18:
	            this.enterOuterAlt(localctx, 18);
	            this.state = 323;
	            this.craftAtProp();
	            break;
	        case 19:
	            this.enterOuterAlt(localctx, 19);
	            this.state = 324;
	            this.valueProp();
	            break;
	        case 20:
	            this.enterOuterAlt(localctx, 20);
	            this.state = 325;
	            this.dropSoundProp();
	            break;
	        case 21:
	            this.enterOuterAlt(localctx, 21);
	            this.state = 326;
	            this.carryChanceProp();
	            break;
	        case 22:
	            this.enterOuterAlt(localctx, 22);
	            this.state = 327;
	            this.moodBoostProp();
	            break;
	        case 23:
	            this.enterOuterAlt(localctx, 23);
	            this.state = 328;
	            this.importanceProp();
	            break;
	        case 24:
	            this.enterOuterAlt(localctx, 24);
	            this.state = 329;
	            this.importanceRangeProp();
	            break;
	        case 25:
	            this.enterOuterAlt(localctx, 25);
	            this.state = 330;
	            this.subjectProp();
	            break;
	        case 26:
	            this.enterOuterAlt(localctx, 26);
	            this.state = 331;
	            this.defectiveNounProp();
	            break;
	        case 27:
	            this.enterOuterAlt(localctx, 27);
	            this.state = 332;
	            this.itemClassProp();
	            break;
	        case 28:
	            this.enterOuterAlt(localctx, 28);
	            this.state = 333;
	            this.categoryProp();
	            break;
	        case 29:
	            this.enterOuterAlt(localctx, 29);
	            this.state = 334;
	            this.stackLimitProp();
	            break;
	        case 30:
	            this.enterOuterAlt(localctx, 30);
	            this.state = 335;
	            this.usableStackSizeProp();
	            break;
	        case 31:
	            this.enterOuterAlt(localctx, 31);
	            this.state = 336;
	            this.indoorDecayAfterProp();
	            break;
	        case 32:
	            this.enterOuterAlt(localctx, 32);
	            this.state = 337;
	            this.outdoorDecayAfterProp();
	            break;
	        case 33:
	            this.enterOuterAlt(localctx, 33);
	            this.state = 338;
	            this.temperatureAffectsDecayProp();
	            break;
	        case 34:
	            this.enterOuterAlt(localctx, 34);
	            this.state = 339;
	            this.commandTypeProp();
	            break;
	        case 35:
	            this.enterOuterAlt(localctx, 35);
	            this.state = 340;
	            this.batchProp();
	            break;
	        case 36:
	            this.enterOuterAlt(localctx, 36);
	            this.state = 341;
	            this.abstractProp();
	            break;
	        case 37:
	            this.enterOuterAlt(localctx, 37);
	            this.state = 342;
	            this.cosmeticPrefabProp();
	            break;
	        case 38:
	            this.enterOuterAlt(localctx, 38);
	            this.state = 343;
	            this.equipmentSlotProp();
	            break;
	        case 39:
	            this.enterOuterAlt(localctx, 39);
	            this.state = 344;
	            this.staticBuffsProp();
	            break;
	        case 40:
	            this.enterOuterAlt(localctx, 40);
	            this.state = 345;
	            this.equipmentCosmeticProp();
	            break;
	        case 41:
	            this.enterOuterAlt(localctx, 41);
	            this.state = 346;
	            this.colorSlotsProp();
	            break;
	        case 42:
	            this.enterOuterAlt(localctx, 42);
	            this.state = 347;
	            this.buffScaleProp();
	            break;
	        case 43:
	            this.enterOuterAlt(localctx, 43);
	            this.state = 348;
	            this.statsProp();
	            break;
	        case 44:
	            this.enterOuterAlt(localctx, 44);
	            this.state = 349;
	            this.salvageAtProp();
	            break;
	        case 45:
	            this.enterOuterAlt(localctx, 45);
	            this.state = 350;
	            this.salvageProp();
	            break;
	        case 46:
	            this.enterOuterAlt(localctx, 46);
	            this.state = 351;
	            this.progressMultiplierProp();
	            break;
	        case 47:
	            this.enterOuterAlt(localctx, 47);
	            this.state = 352;
	            this.researchEntryProp();
	            break;
	        case 48:
	            this.enterOuterAlt(localctx, 48);
	            this.state = 353;
	            this.qualityDifficultyProp();
	            break;
	        case 49:
	            this.enterOuterAlt(localctx, 49);
	            this.state = 354;
	            this.skillCurveProp();
	            break;
	        case 50:
	            this.enterOuterAlt(localctx, 50);
	            this.state = 355;
	            this.relatedSubjectProp();
	            break;
	        case 51:
	            this.enterOuterAlt(localctx, 51);
	            this.state = 356;
	            this.forHerbavoreAnimalsProp();
	            break;
	        case 52:
	            this.enterOuterAlt(localctx, 52);
	            this.state = 357;
	            this.dropItemTypeProp();
	            break;
	        case 53:
	            this.enterOuterAlt(localctx, 53);
	            this.state = 358;
	            this.dropItemChanceProp();
	            break;
	        case 54:
	            this.enterOuterAlt(localctx, 54);
	            this.state = 359;
	            this.sharedMaterialsProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	idProp() {
	    let localctx = new IdPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 8, OctdatParser.RULE_idProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 362;
	        this.match(OctdatParser.T__0);
	        this.state = 363;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	typeProp() {
	    let localctx = new TypePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 10, OctdatParser.RULE_typeProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 365;
	        this.match(OctdatParser.T__1);
	        this.state = 366;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	inheritProp() {
	    let localctx = new InheritPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 12, OctdatParser.RULE_inheritProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 368;
	        this.match(OctdatParser.T__2);
	        this.state = 369;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	aliasProp() {
	    let localctx = new AliasPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 14, OctdatParser.RULE_aliasProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 371;
	        this.match(OctdatParser.T__3);
	        this.state = 372;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	nameProp() {
	    let localctx = new NamePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 16, OctdatParser.RULE_nameProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 374;
	        this.match(OctdatParser.T__4);
	        this.state = 375;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 376;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	descriptionProp() {
	    let localctx = new DescriptionPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 18, OctdatParser.RULE_descriptionProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 378;
	        this.match(OctdatParser.T__5);
	        this.state = 379;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 380;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	iconProp() {
	    let localctx = new IconPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 20, OctdatParser.RULE_iconProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 382;
	        this.match(OctdatParser.T__6);
	        this.state = 383;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 384;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierIconProp() {
	    let localctx = new ModifierIconPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 22, OctdatParser.RULE_modifierIconProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 386;
	        this.match(OctdatParser.T__7);
	        this.state = 387;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 388;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	attributesProp() {
	    let localctx = new AttributesPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 24, OctdatParser.RULE_attributesProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 390;
	        this.match(OctdatParser.T__8);
	        this.state = 391;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 392;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 393;
	        this.attributeList();
	        this.state = 394;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	limitProp() {
	    let localctx = new LimitPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 26, OctdatParser.RULE_limitProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 396;
	        this.match(OctdatParser.T__9);
	        this.state = 397;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 398;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	activationProp() {
	    let localctx = new ActivationPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 28, OctdatParser.RULE_activationProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 400;
	        this.match(OctdatParser.T__10);
	        this.state = 401;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 402;
	        this.match(OctdatParser.LBRACE);
	        this.state = 403;
	        this.activationBody();
	        this.state = 404;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	targetTypeProp() {
	    let localctx = new TargetTypePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 30, OctdatParser.RULE_targetTypeProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 406;
	        this.match(OctdatParser.T__11);
	        this.state = 407;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 408;
	        this.match(OctdatParser.LBRACE);
	        this.state = 409;
	        this.targetTypeBody();
	        this.state = 410;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionsProp() {
	    let localctx = new ActionsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 32, OctdatParser.RULE_actionsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 412;
	        this.match(OctdatParser.T__12);
	        this.state = 413;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 414;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 415;
	        this.actionList();
	        this.state = 416;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	ingredientsProp() {
	    let localctx = new IngredientsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 34, OctdatParser.RULE_ingredientsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 418;
	        this.match(OctdatParser.T__13);
	        this.state = 419;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 420;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 421;
	        this.ingredientList();
	        this.state = 422;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorsProp() {
	    let localctx = new ColorsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 36, OctdatParser.RULE_colorsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 424;
	        this.match(OctdatParser.T__14);
	        this.state = 425;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 426;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 427;
	        this.colorList();
	        this.state = 428;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	prefabProp() {
	    let localctx = new PrefabPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 38, OctdatParser.RULE_prefabProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 430;
	        this.match(OctdatParser.T__15);
	        this.state = 431;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 432;
	        this.match(OctdatParser.LBRACE);
	        this.state = 433;
	        this.prefabBody();
	        this.state = 434;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	consumableModifiersProp() {
	    let localctx = new ConsumableModifiersPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 40, OctdatParser.RULE_consumableModifiersProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 436;
	        this.match(OctdatParser.T__16);
	        this.state = 437;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 438;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 439;
	        this.modifierList();
	        this.state = 440;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	craftAtProp() {
	    let localctx = new CraftAtPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 42, OctdatParser.RULE_craftAtProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 442;
	        this.match(OctdatParser.T__17);
	        this.state = 443;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 444;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 445;
	        this.craftAtList();
	        this.state = 446;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	valueProp() {
	    let localctx = new ValuePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 44, OctdatParser.RULE_valueProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 448;
	        this.match(OctdatParser.T__18);
	        this.state = 449;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 450;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	dropSoundProp() {
	    let localctx = new DropSoundPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 46, OctdatParser.RULE_dropSoundProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 452;
	        this.match(OctdatParser.T__19);
	        this.state = 453;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 454;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	carryChanceProp() {
	    let localctx = new CarryChancePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 48, OctdatParser.RULE_carryChanceProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 456;
	        this.match(OctdatParser.T__20);
	        this.state = 457;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 458;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	moodBoostProp() {
	    let localctx = new MoodBoostPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 50, OctdatParser.RULE_moodBoostProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 460;
	        this.match(OctdatParser.T__21);
	        this.state = 461;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 462;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	importanceProp() {
	    let localctx = new ImportancePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 52, OctdatParser.RULE_importanceProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 464;
	        this.match(OctdatParser.T__22);
	        this.state = 465;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 466;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	importanceRangeProp() {
	    let localctx = new ImportanceRangePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 54, OctdatParser.RULE_importanceRangeProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 468;
	        this.match(OctdatParser.T__23);
	        this.state = 469;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 470;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	subjectProp() {
	    let localctx = new SubjectPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 56, OctdatParser.RULE_subjectProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 472;
	        this.match(OctdatParser.T__24);
	        this.state = 473;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 474;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	defectiveNounProp() {
	    let localctx = new DefectiveNounPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 58, OctdatParser.RULE_defectiveNounProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 476;
	        this.match(OctdatParser.T__25);
	        this.state = 477;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 478;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	itemClassProp() {
	    let localctx = new ItemClassPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 60, OctdatParser.RULE_itemClassProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 480;
	        this.match(OctdatParser.T__26);
	        this.state = 481;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 482;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	categoryProp() {
	    let localctx = new CategoryPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 62, OctdatParser.RULE_categoryProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 484;
	        this.match(OctdatParser.T__27);
	        this.state = 485;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 486;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	stackLimitProp() {
	    let localctx = new StackLimitPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 64, OctdatParser.RULE_stackLimitProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 488;
	        this.match(OctdatParser.T__28);
	        this.state = 489;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 490;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	usableStackSizeProp() {
	    let localctx = new UsableStackSizePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 66, OctdatParser.RULE_usableStackSizeProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 492;
	        this.match(OctdatParser.T__29);
	        this.state = 493;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 494;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	indoorDecayAfterProp() {
	    let localctx = new IndoorDecayAfterPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 68, OctdatParser.RULE_indoorDecayAfterProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 496;
	        this.match(OctdatParser.T__30);
	        this.state = 497;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 498;
	        this.match(OctdatParser.DURATION);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	outdoorDecayAfterProp() {
	    let localctx = new OutdoorDecayAfterPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 70, OctdatParser.RULE_outdoorDecayAfterProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 500;
	        this.match(OctdatParser.T__31);
	        this.state = 501;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 502;
	        this.match(OctdatParser.DURATION);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	temperatureAffectsDecayProp() {
	    let localctx = new TemperatureAffectsDecayPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 72, OctdatParser.RULE_temperatureAffectsDecayProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 504;
	        this.match(OctdatParser.T__32);
	        this.state = 505;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 506;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	commandTypeProp() {
	    let localctx = new CommandTypePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 74, OctdatParser.RULE_commandTypeProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 508;
	        this.match(OctdatParser.T__33);
	        this.state = 509;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 510;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	batchProp() {
	    let localctx = new BatchPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 76, OctdatParser.RULE_batchProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 512;
	        this.match(OctdatParser.T__34);
	        this.state = 513;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 514;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	abstractProp() {
	    let localctx = new AbstractPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 78, OctdatParser.RULE_abstractProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 516;
	        this.match(OctdatParser.T__35);
	        this.state = 517;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 518;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	cosmeticPrefabProp() {
	    let localctx = new CosmeticPrefabPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 80, OctdatParser.RULE_cosmeticPrefabProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 520;
	        this.match(OctdatParser.T__36);
	        this.state = 521;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 522;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	equipmentSlotProp() {
	    let localctx = new EquipmentSlotPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 82, OctdatParser.RULE_equipmentSlotProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 524;
	        this.match(OctdatParser.T__37);
	        this.state = 525;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 526;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	staticBuffsProp() {
	    let localctx = new StaticBuffsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 84, OctdatParser.RULE_staticBuffsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 528;
	        this.match(OctdatParser.T__38);
	        this.state = 529;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 530;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 531;
	        this.staticBuffList();
	        this.state = 532;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	equipmentCosmeticProp() {
	    let localctx = new EquipmentCosmeticPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 86, OctdatParser.RULE_equipmentCosmeticProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 534;
	        this.match(OctdatParser.T__39);
	        this.state = 535;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 536;
	        this.match(OctdatParser.LBRACE);
	        this.state = 537;
	        this.equipmentCosmeticBody();
	        this.state = 538;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorSlotsProp() {
	    let localctx = new ColorSlotsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 88, OctdatParser.RULE_colorSlotsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 540;
	        this.match(OctdatParser.T__40);
	        this.state = 541;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 542;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 543;
	        this.colorSlotList();
	        this.state = 544;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	buffScaleProp() {
	    let localctx = new BuffScalePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 90, OctdatParser.RULE_buffScaleProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 546;
	        this.match(OctdatParser.T__41);
	        this.state = 547;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 548;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statsProp() {
	    let localctx = new StatsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 92, OctdatParser.RULE_statsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 550;
	        this.match(OctdatParser.T__42);
	        this.state = 551;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 552;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 553;
	        this.statList();
	        this.state = 554;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	salvageAtProp() {
	    let localctx = new SalvageAtPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 94, OctdatParser.RULE_salvageAtProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 556;
	        this.match(OctdatParser.T__43);
	        this.state = 557;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 558;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	salvageProp() {
	    let localctx = new SalvagePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 96, OctdatParser.RULE_salvageProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 560;
	        this.match(OctdatParser.T__44);
	        this.state = 561;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 562;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 563;
	        this.salvageList();
	        this.state = 564;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	progressMultiplierProp() {
	    let localctx = new ProgressMultiplierPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 98, OctdatParser.RULE_progressMultiplierProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 566;
	        this.match(OctdatParser.T__45);
	        this.state = 567;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 568;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	researchEntryProp() {
	    let localctx = new ResearchEntryPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 100, OctdatParser.RULE_researchEntryProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 570;
	        this.match(OctdatParser.T__46);
	        this.state = 571;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 572;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	qualityDifficultyProp() {
	    let localctx = new QualityDifficultyPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 102, OctdatParser.RULE_qualityDifficultyProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 574;
	        this.match(OctdatParser.T__47);
	        this.state = 575;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 576;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	skillCurveProp() {
	    let localctx = new SkillCurvePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 104, OctdatParser.RULE_skillCurveProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 578;
	        this.match(OctdatParser.T__48);
	        this.state = 579;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 580;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	relatedSubjectProp() {
	    let localctx = new RelatedSubjectPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 106, OctdatParser.RULE_relatedSubjectProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 582;
	        this.match(OctdatParser.T__49);
	        this.state = 583;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 584;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	forHerbavoreAnimalsProp() {
	    let localctx = new ForHerbavoreAnimalsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 108, OctdatParser.RULE_forHerbavoreAnimalsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 586;
	        this.match(OctdatParser.T__50);
	        this.state = 587;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 588;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	dropItemTypeProp() {
	    let localctx = new DropItemTypePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 110, OctdatParser.RULE_dropItemTypeProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 590;
	        this.match(OctdatParser.T__51);
	        this.state = 591;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 592;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	dropItemChanceProp() {
	    let localctx = new DropItemChancePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 112, OctdatParser.RULE_dropItemChanceProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 594;
	        this.match(OctdatParser.T__52);
	        this.state = 595;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 596;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedMaterialsProp() {
	    let localctx = new SharedMaterialsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 114, OctdatParser.RULE_sharedMaterialsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 598;
	        this.match(OctdatParser.T__53);
	        this.state = 599;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 600;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 601;
	        this.sharedMaterialsList();
	        this.state = 602;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	attributeList() {
	    let localctx = new AttributeListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 116, OctdatParser.RULE_attributeList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 604;
	        this.attribute();
	        this.state = 609;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 605;
	            this.match(OctdatParser.COMMA);
	            this.state = 606;
	            this.attribute();
	            this.state = 611;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	attribute() {
	    let localctx = new AttributeContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 118, OctdatParser.RULE_attribute);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 612;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	activationBody() {
	    let localctx = new ActivationBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 120, OctdatParser.RULE_activationBody);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 614;
	        this.match(OctdatParser.T__1);
	        this.state = 615;
	        this.match(OctdatParser.ID);
	        this.state = 616;
	        this.match(OctdatParser.T__54);
	        this.state = 617;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 618;
	        this.match(OctdatParser.NUMBER);
	        this.state = 619;
	        this.match(OctdatParser.T__55);
	        this.state = 620;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 621;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	targetTypeBody() {
	    let localctx = new TargetTypeBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 122, OctdatParser.RULE_targetTypeBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 623;
	        this.match(OctdatParser.T__1);
	        this.state = 624;
	        this.match(OctdatParser.ID);
	        this.state = 626;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===57 || _la===58) {
	            this.state = 625;
	            this.targetTypeProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	targetTypeProps() {
	    let localctx = new TargetTypePropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 124, OctdatParser.RULE_targetTypeProps);
	    try {
	        this.state = 630;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 57:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 628;
	            this.targetTypeRangeProp();
	            break;
	        case 58:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 629;
	            this.targetTypeAutoEnemiesProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	targetTypeRangeProp() {
	    let localctx = new TargetTypeRangePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 126, OctdatParser.RULE_targetTypeRangeProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 632;
	        this.match(OctdatParser.T__56);
	        this.state = 633;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 634;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	targetTypeAutoEnemiesProp() {
	    let localctx = new TargetTypeAutoEnemiesPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 128, OctdatParser.RULE_targetTypeAutoEnemiesProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 636;
	        this.match(OctdatParser.T__57);
	        this.state = 637;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 638;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionList() {
	    let localctx = new ActionListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 130, OctdatParser.RULE_actionList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 640;
	        this.action();
	        this.state = 645;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 641;
	            this.match(OctdatParser.COMMA);
	            this.state = 642;
	            this.action();
	            this.state = 647;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	action() {
	    let localctx = new ActionContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 132, OctdatParser.RULE_action);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 648;
	        this.match(OctdatParser.LBRACE);
	        this.state = 649;
	        this.actionBody();
	        this.state = 650;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionBody() {
	    let localctx = new ActionBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 134, OctdatParser.RULE_actionBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 652;
	        this.match(OctdatParser.T__1);
	        this.state = 653;
	        this.match(OctdatParser.ID);
	        this.state = 655;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(((((_la - 59)) & ~0x1f) === 0 && ((1 << (_la - 59)) & 127) !== 0)) {
	            this.state = 654;
	            this.actionProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionProps() {
	    let localctx = new ActionPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 136, OctdatParser.RULE_actionProps);
	    try {
	        this.state = 664;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 59:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 657;
	            this.actionStatusEffectNameProp();
	            break;
	        case 60:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 658;
	            this.actionStatusEffectMinutesProp();
	            break;
	        case 61:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 659;
	            this.actionEffectProp();
	            break;
	        case 62:
	            this.enterOuterAlt(localctx, 4);
	            this.state = 660;
	            this.actionSelfProp();
	            break;
	        case 63:
	            this.enterOuterAlt(localctx, 5);
	            this.state = 661;
	            this.actionStatProp();
	            break;
	        case 64:
	            this.enterOuterAlt(localctx, 6);
	            this.state = 662;
	            this.actionDeltaProp();
	            break;
	        case 65:
	            this.enterOuterAlt(localctx, 7);
	            this.state = 663;
	            this.actionMinutesToMaturityProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionStatusEffectNameProp() {
	    let localctx = new ActionStatusEffectNamePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 138, OctdatParser.RULE_actionStatusEffectNameProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 666;
	        this.match(OctdatParser.T__58);
	        this.state = 667;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 668;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionStatusEffectMinutesProp() {
	    let localctx = new ActionStatusEffectMinutesPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 140, OctdatParser.RULE_actionStatusEffectMinutesProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 670;
	        this.match(OctdatParser.T__59);
	        this.state = 671;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 672;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionEffectProp() {
	    let localctx = new ActionEffectPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 142, OctdatParser.RULE_actionEffectProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 674;
	        this.match(OctdatParser.T__60);
	        this.state = 675;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 676;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionSelfProp() {
	    let localctx = new ActionSelfPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 144, OctdatParser.RULE_actionSelfProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 678;
	        this.match(OctdatParser.T__61);
	        this.state = 679;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 680;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionStatProp() {
	    let localctx = new ActionStatPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 146, OctdatParser.RULE_actionStatProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 682;
	        this.match(OctdatParser.T__62);
	        this.state = 683;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 684;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionDeltaProp() {
	    let localctx = new ActionDeltaPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 148, OctdatParser.RULE_actionDeltaProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 686;
	        this.match(OctdatParser.T__63);
	        this.state = 687;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 688;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	actionMinutesToMaturityProp() {
	    let localctx = new ActionMinutesToMaturityPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 150, OctdatParser.RULE_actionMinutesToMaturityProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 690;
	        this.match(OctdatParser.T__64);
	        this.state = 691;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 692;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	ingredientList() {
	    let localctx = new IngredientListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 152, OctdatParser.RULE_ingredientList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 694;
	        this.ingredient();
	        this.state = 699;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 695;
	            this.match(OctdatParser.COMMA);
	            this.state = 696;
	            this.ingredient();
	            this.state = 701;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	ingredient() {
	    let localctx = new IngredientContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 154, OctdatParser.RULE_ingredient);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 702;
	        this.match(OctdatParser.LBRACE);
	        this.state = 703;
	        this.ingredientBody();
	        this.state = 704;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	ingredientBody() {
	    let localctx = new IngredientBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 156, OctdatParser.RULE_ingredientBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 706;
	        this.match(OctdatParser.T__1);
	        this.state = 707;
	        this.match(OctdatParser.ID);
	        this.state = 709;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===66 || _la===67) {
	            this.state = 708;
	            this.ingredientProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	ingredientProps() {
	    let localctx = new IngredientPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 158, OctdatParser.RULE_ingredientProps);
	    try {
	        this.state = 713;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 66:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 711;
	            this.ingredientFilterProp();
	            break;
	        case 67:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 712;
	            this.ingredientCountProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	ingredientFilterProp() {
	    let localctx = new IngredientFilterPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 160, OctdatParser.RULE_ingredientFilterProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 715;
	        this.match(OctdatParser.T__65);
	        this.state = 716;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 717;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	ingredientCountProp() {
	    let localctx = new IngredientCountPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 162, OctdatParser.RULE_ingredientCountProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 719;
	        this.match(OctdatParser.T__66);
	        this.state = 720;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 721;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorList() {
	    let localctx = new ColorListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 164, OctdatParser.RULE_colorList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 723;
	        this.color();
	        this.state = 728;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 724;
	            this.match(OctdatParser.COMMA);
	            this.state = 725;
	            this.color();
	            this.state = 730;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	color() {
	    let localctx = new ColorContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 166, OctdatParser.RULE_color);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 731;
	        this.match(OctdatParser.T__67);
	        this.state = 732;
	        this.match(OctdatParser.LPAREN);
	        this.state = 733;
	        this.match(OctdatParser.COLOR);
	        this.state = 734;
	        this.match(OctdatParser.RPAREN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	prefabBody() {
	    let localctx = new PrefabBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 168, OctdatParser.RULE_prefabBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 736;
	        this.match(OctdatParser.T__1);
	        this.state = 737;
	        this.match(OctdatParser.ID);
	        this.state = 739;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===5 || ((((_la - 69)) & ~0x1f) === 0 && ((1 << (_la - 69)) & 8388615) !== 0)) {
	            this.state = 738;
	            this.prefabProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	prefabProps() {
	    let localctx = new PrefabPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 170, OctdatParser.RULE_prefabProps);
	    try {
	        this.state = 746;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 69:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 741;
	            this.prefabPathProp();
	            break;
	        case 5:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 742;
	            this.prefabNameProp();
	            break;
	        case 70:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 743;
	            this.prefabBehaviorProp();
	            break;
	        case 71:
	            this.enterOuterAlt(localctx, 4);
	            this.state = 744;
	            this.prefabPhysicsProp();
	            break;
	        case 92:
	            this.enterOuterAlt(localctx, 5);
	            this.state = 745;
	            this.sharedMaterialProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	prefabPathProp() {
	    let localctx = new PrefabPathPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 172, OctdatParser.RULE_prefabPathProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 748;
	        this.match(OctdatParser.T__68);
	        this.state = 749;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 750;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	prefabNameProp() {
	    let localctx = new PrefabNamePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 174, OctdatParser.RULE_prefabNameProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 752;
	        this.match(OctdatParser.T__4);
	        this.state = 753;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 754;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	prefabBehaviorProp() {
	    let localctx = new PrefabBehaviorPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 176, OctdatParser.RULE_prefabBehaviorProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 756;
	        this.match(OctdatParser.T__69);
	        this.state = 757;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 758;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	prefabPhysicsProp() {
	    let localctx = new PrefabPhysicsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 178, OctdatParser.RULE_prefabPhysicsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 760;
	        this.match(OctdatParser.T__70);
	        this.state = 761;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 762;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedMaterialsList() {
	    let localctx = new SharedMaterialsListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 180, OctdatParser.RULE_sharedMaterialsList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 764;
	        this.sharedMaterialProp();
	        this.state = 769;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 765;
	            this.match(OctdatParser.COMMA);
	            this.state = 766;
	            this.sharedMaterialProp();
	            this.state = 771;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedMaterialProp() {
	    let localctx = new SharedMaterialPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 182, OctdatParser.RULE_sharedMaterialProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 772;
	        this.match(OctdatParser.LBRACE);
	        this.state = 773;
	        this.sharedMaterialBody();
	        this.state = 774;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedMaterialBody() {
	    let localctx = new SharedMaterialBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 184, OctdatParser.RULE_sharedMaterialBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 776;
	        this.match(OctdatParser.T__1);
	        this.state = 777;
	        this.match(OctdatParser.ID);
	        this.state = 779;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===72 || _la===73) {
	            this.state = 778;
	            this.sharedMaterialProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedMaterialProps() {
	    let localctx = new SharedMaterialPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 186, OctdatParser.RULE_sharedMaterialProps);
	    try {
	        this.state = 783;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 72:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 781;
	            this.sharedMaterialNamesProp();
	            break;
	        case 73:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 782;
	            this.sharedMaterialMaterialProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedMaterialNamesProp() {
	    let localctx = new SharedMaterialNamesPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 188, OctdatParser.RULE_sharedMaterialNamesProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 785;
	        this.match(OctdatParser.T__71);
	        this.state = 786;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 787;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 788;
	        this.nameList();
	        this.state = 789;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	sharedMaterialMaterialProp() {
	    let localctx = new SharedMaterialMaterialPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 190, OctdatParser.RULE_sharedMaterialMaterialProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 791;
	        this.match(OctdatParser.T__72);
	        this.state = 792;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 793;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	nameList() {
	    let localctx = new NameListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 192, OctdatParser.RULE_nameList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 795;
	        this.match(OctdatParser.STRING);
	        this.state = 800;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 796;
	            this.match(OctdatParser.COMMA);
	            this.state = 797;
	            this.match(OctdatParser.STRING);
	            this.state = 802;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierList() {
	    let localctx = new ModifierListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 194, OctdatParser.RULE_modifierList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 803;
	        this.modifier();
	        this.state = 808;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 804;
	            this.match(OctdatParser.COMMA);
	            this.state = 805;
	            this.modifier();
	            this.state = 810;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifier() {
	    let localctx = new ModifierContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 196, OctdatParser.RULE_modifier);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 811;
	        this.match(OctdatParser.LBRACE);
	        this.state = 812;
	        this.modifierBody();
	        this.state = 813;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierBody() {
	    let localctx = new ModifierBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 198, OctdatParser.RULE_modifierBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 815;
	        this.match(OctdatParser.T__1);
	        this.state = 816;
	        this.match(OctdatParser.ID);
	        this.state = 818;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===5 || ((((_la - 64)) & ~0x1f) === 0 && ((1 << (_la - 64)) & 7169) !== 0)) {
	            this.state = 817;
	            this.modifierProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierProps() {
	    let localctx = new ModifierPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 200, OctdatParser.RULE_modifierProps);
	    try {
	        this.state = 825;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 5:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 820;
	            this.modifierNameProp();
	            break;
	        case 64:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 821;
	            this.modifierDeltaProp();
	            break;
	        case 74:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 822;
	            this.modifierStatNameProp();
	            break;
	        case 75:
	            this.enterOuterAlt(localctx, 4);
	            this.state = 823;
	            this.modifierMultiplierProp();
	            break;
	        case 76:
	            this.enterOuterAlt(localctx, 5);
	            this.state = 824;
	            this.modifierGoodProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierNameProp() {
	    let localctx = new ModifierNamePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 202, OctdatParser.RULE_modifierNameProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 827;
	        this.match(OctdatParser.T__4);
	        this.state = 828;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 829;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierDeltaProp() {
	    let localctx = new ModifierDeltaPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 204, OctdatParser.RULE_modifierDeltaProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 831;
	        this.match(OctdatParser.T__63);
	        this.state = 832;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 833;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierStatNameProp() {
	    let localctx = new ModifierStatNamePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 206, OctdatParser.RULE_modifierStatNameProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 835;
	        this.match(OctdatParser.T__73);
	        this.state = 836;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 837;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierMultiplierProp() {
	    let localctx = new ModifierMultiplierPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 208, OctdatParser.RULE_modifierMultiplierProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 839;
	        this.match(OctdatParser.T__74);
	        this.state = 840;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 841;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	modifierGoodProp() {
	    let localctx = new ModifierGoodPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 210, OctdatParser.RULE_modifierGoodProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 843;
	        this.match(OctdatParser.T__75);
	        this.state = 844;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 845;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	craftAtList() {
	    let localctx = new CraftAtListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 212, OctdatParser.RULE_craftAtList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 847;
	        this.craftAt();
	        this.state = 852;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 848;
	            this.match(OctdatParser.COMMA);
	            this.state = 849;
	            this.craftAt();
	            this.state = 854;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	craftAt() {
	    let localctx = new CraftAtContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 214, OctdatParser.RULE_craftAt);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 855;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	staticBuffList() {
	    let localctx = new StaticBuffListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 216, OctdatParser.RULE_staticBuffList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 857;
	        this.staticBuff();
	        this.state = 862;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 858;
	            this.match(OctdatParser.COMMA);
	            this.state = 859;
	            this.staticBuff();
	            this.state = 864;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	staticBuff() {
	    let localctx = new StaticBuffContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 218, OctdatParser.RULE_staticBuff);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 865;
	        this.match(OctdatParser.LBRACE);
	        this.state = 866;
	        this.staticBuffBody();
	        this.state = 867;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	staticBuffBody() {
	    let localctx = new StaticBuffBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 220, OctdatParser.RULE_staticBuffBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 869;
	        this.match(OctdatParser.T__1);
	        this.state = 870;
	        this.match(OctdatParser.ID);
	        this.state = 872;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(((((_la - 74)) & ~0x1f) === 0 && ((1 << (_la - 74)) & 7) !== 0)) {
	            this.state = 871;
	            this.staticBuffProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	staticBuffProps() {
	    let localctx = new StaticBuffPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 222, OctdatParser.RULE_staticBuffProps);
	    try {
	        this.state = 877;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 74:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 874;
	            this.staticBuffStatNameProp();
	            break;
	        case 75:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 875;
	            this.staticBuffMultiplierProp();
	            break;
	        case 76:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 876;
	            this.staticBuffGoodProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	staticBuffStatNameProp() {
	    let localctx = new StaticBuffStatNamePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 224, OctdatParser.RULE_staticBuffStatNameProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 879;
	        this.match(OctdatParser.T__73);
	        this.state = 880;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 881;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	staticBuffMultiplierProp() {
	    let localctx = new StaticBuffMultiplierPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 226, OctdatParser.RULE_staticBuffMultiplierProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 883;
	        this.match(OctdatParser.T__74);
	        this.state = 884;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 885;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	staticBuffGoodProp() {
	    let localctx = new StaticBuffGoodPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 228, OctdatParser.RULE_staticBuffGoodProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 887;
	        this.match(OctdatParser.T__75);
	        this.state = 888;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 889;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	equipmentCosmeticBody() {
	    let localctx = new EquipmentCosmeticBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 230, OctdatParser.RULE_equipmentCosmeticBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 891;
	        this.match(OctdatParser.T__1);
	        this.state = 892;
	        this.match(OctdatParser.ID);
	        this.state = 894;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===16 || _la===77) {
	            this.state = 893;
	            this.equipmentCosmeticProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	equipmentCosmeticProps() {
	    let localctx = new EquipmentCosmeticPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 232, OctdatParser.RULE_equipmentCosmeticProps);
	    try {
	        this.state = 898;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 16:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 896;
	            this.equipmentCosmeticPrefabProp();
	            break;
	        case 77:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 897;
	            this.equipmentCosmeticMaskMaterialsProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	equipmentCosmeticPrefabProp() {
	    let localctx = new EquipmentCosmeticPrefabPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 234, OctdatParser.RULE_equipmentCosmeticPrefabProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 900;
	        this.prefabProp();
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	equipmentCosmeticMaskMaterialsProp() {
	    let localctx = new EquipmentCosmeticMaskMaterialsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 236, OctdatParser.RULE_equipmentCosmeticMaskMaterialsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 902;
	        this.match(OctdatParser.T__76);
	        this.state = 903;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 904;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 905;
	        this.maskMaterialList();
	        this.state = 906;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	maskMaterialList() {
	    let localctx = new MaskMaterialListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 238, OctdatParser.RULE_maskMaterialList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 908;
	        this.maskMaterial();
	        this.state = 913;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 909;
	            this.match(OctdatParser.COMMA);
	            this.state = 910;
	            this.maskMaterial();
	            this.state = 915;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	maskMaterial() {
	    let localctx = new MaskMaterialContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 240, OctdatParser.RULE_maskMaterial);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 916;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorSlotList() {
	    let localctx = new ColorSlotListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 242, OctdatParser.RULE_colorSlotList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 918;
	        this.colorSlot();
	        this.state = 923;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 919;
	            this.match(OctdatParser.COMMA);
	            this.state = 920;
	            this.colorSlot();
	            this.state = 925;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorSlot() {
	    let localctx = new ColorSlotContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 244, OctdatParser.RULE_colorSlot);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 926;
	        this.match(OctdatParser.LBRACE);
	        this.state = 927;
	        this.colorSlotBody();
	        this.state = 928;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorSlotBody() {
	    let localctx = new ColorSlotBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 246, OctdatParser.RULE_colorSlotBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 930;
	        this.match(OctdatParser.T__1);
	        this.state = 931;
	        this.match(OctdatParser.ID);
	        this.state = 933;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===5 || _la===78 || _la===79) {
	            this.state = 932;
	            this.colorSlotProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorSlotProps() {
	    let localctx = new ColorSlotPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 248, OctdatParser.RULE_colorSlotProps);
	    try {
	        this.state = 938;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 5:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 935;
	            this.colorSlotNameProp();
	            break;
	        case 78:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 936;
	            this.colorSlotMaterialsProp();
	            break;
	        case 79:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 937;
	            this.colorSlotReferenceProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorSlotNameProp() {
	    let localctx = new ColorSlotNamePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 250, OctdatParser.RULE_colorSlotNameProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 940;
	        this.match(OctdatParser.T__4);
	        this.state = 941;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 942;
	        this.match(OctdatParser.STRING);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorSlotMaterialsProp() {
	    let localctx = new ColorSlotMaterialsPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 252, OctdatParser.RULE_colorSlotMaterialsProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 944;
	        this.match(OctdatParser.T__77);
	        this.state = 945;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 946;
	        this.match(OctdatParser.LBRACKET);
	        this.state = 947;
	        this.materialList();
	        this.state = 948;
	        this.match(OctdatParser.RBRACKET);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	colorSlotReferenceProp() {
	    let localctx = new ColorSlotReferencePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 254, OctdatParser.RULE_colorSlotReferenceProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 950;
	        this.match(OctdatParser.T__78);
	        this.state = 951;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 952;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	materialList() {
	    let localctx = new MaterialListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 256, OctdatParser.RULE_materialList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 954;
	        this.material();
	        this.state = 959;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 955;
	            this.match(OctdatParser.COMMA);
	            this.state = 956;
	            this.material();
	            this.state = 961;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	material() {
	    let localctx = new MaterialContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 258, OctdatParser.RULE_material);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 962;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statList() {
	    let localctx = new StatListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 260, OctdatParser.RULE_statList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 964;
	        this.stat();
	        this.state = 969;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 965;
	            this.match(OctdatParser.COMMA);
	            this.state = 966;
	            this.stat();
	            this.state = 971;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	stat() {
	    let localctx = new StatContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 262, OctdatParser.RULE_stat);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 972;
	        this.match(OctdatParser.LBRACE);
	        this.state = 973;
	        this.statBody();
	        this.state = 974;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statBody() {
	    let localctx = new StatBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 264, OctdatParser.RULE_statBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 976;
	        this.match(OctdatParser.T__1);
	        this.state = 977;
	        this.match(OctdatParser.ID);
	        this.state = 979;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===5 || ((((_la - 80)) & ~0x1f) === 0 && ((1 << (_la - 80)) & 15) !== 0)) {
	            this.state = 978;
	            this.statProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statProps() {
	    let localctx = new StatPropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 266, OctdatParser.RULE_statProps);
	    try {
	        this.state = 986;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 5:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 981;
	            this.statNameProp();
	            break;
	        case 80:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 982;
	            this.statFormulaProp();
	            break;
	        case 81:
	            this.enterOuterAlt(localctx, 3);
	            this.state = 983;
	            this.statModifierProp();
	            break;
	        case 82:
	            this.enterOuterAlt(localctx, 4);
	            this.state = 984;
	            this.statMinProp();
	            break;
	        case 83:
	            this.enterOuterAlt(localctx, 5);
	            this.state = 985;
	            this.statMaxProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statNameProp() {
	    let localctx = new StatNamePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 268, OctdatParser.RULE_statNameProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 988;
	        this.match(OctdatParser.T__4);
	        this.state = 989;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 990;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statFormulaProp() {
	    let localctx = new StatFormulaPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 270, OctdatParser.RULE_statFormulaProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 992;
	        this.match(OctdatParser.T__79);
	        this.state = 993;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 994;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statModifierProp() {
	    let localctx = new StatModifierPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 272, OctdatParser.RULE_statModifierProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 996;
	        this.match(OctdatParser.T__80);
	        this.state = 997;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 998;
	        this.match(OctdatParser.BOOLEAN);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statMinProp() {
	    let localctx = new StatMinPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 274, OctdatParser.RULE_statMinProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1000;
	        this.match(OctdatParser.T__81);
	        this.state = 1001;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 1002;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	statMaxProp() {
	    let localctx = new StatMaxPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 276, OctdatParser.RULE_statMaxProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1004;
	        this.match(OctdatParser.T__82);
	        this.state = 1005;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 1006;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	salvageList() {
	    let localctx = new SalvageListContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 278, OctdatParser.RULE_salvageList);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1008;
	        this.salvage();
	        this.state = 1013;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        while(_la===98) {
	            this.state = 1009;
	            this.match(OctdatParser.COMMA);
	            this.state = 1010;
	            this.salvage();
	            this.state = 1015;
	            this._errHandler.sync(this);
	            _la = this._input.LA(1);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	salvage() {
	    let localctx = new SalvageContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 280, OctdatParser.RULE_salvage);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1016;
	        this.match(OctdatParser.LBRACE);
	        this.state = 1017;
	        this.salvageBody();
	        this.state = 1018;
	        this.match(OctdatParser.RBRACE);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	salvageBody() {
	    let localctx = new SalvageBodyContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 282, OctdatParser.RULE_salvageBody);
	    var _la = 0;
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1020;
	        this.match(OctdatParser.T__1);
	        this.state = 1021;
	        this.match(OctdatParser.ID);
	        this.state = 1023;
	        this._errHandler.sync(this);
	        _la = this._input.LA(1);
	        if(_la===67 || _la===84) {
	            this.state = 1022;
	            this.salvageProps();
	        }

	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	salvageProps() {
	    let localctx = new SalvagePropsContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 284, OctdatParser.RULE_salvageProps);
	    try {
	        this.state = 1027;
	        this._errHandler.sync(this);
	        switch(this._input.LA(1)) {
	        case 84:
	            this.enterOuterAlt(localctx, 1);
	            this.state = 1025;
	            this.salvageItemTypeProp();
	            break;
	        case 67:
	            this.enterOuterAlt(localctx, 2);
	            this.state = 1026;
	            this.salvageCountProp();
	            break;
	        default:
	            throw new antlr4.error.NoViableAltException(this);
	        }
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	salvageItemTypeProp() {
	    let localctx = new SalvageItemTypePropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 286, OctdatParser.RULE_salvageItemTypeProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1029;
	        this.match(OctdatParser.T__83);
	        this.state = 1030;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 1031;
	        this.match(OctdatParser.ID);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}



	salvageCountProp() {
	    let localctx = new SalvageCountPropContext(this, this._ctx, this.state);
	    this.enterRule(localctx, 288, OctdatParser.RULE_salvageCountProp);
	    try {
	        this.enterOuterAlt(localctx, 1);
	        this.state = 1033;
	        this.match(OctdatParser.T__66);
	        this.state = 1034;
	        this.match(OctdatParser.ASSIGN);
	        this.state = 1035;
	        this.match(OctdatParser.NUMBER);
	    } catch (re) {
	    	if(re instanceof antlr4.error.RecognitionException) {
		        localctx.exception = re;
		        this._errHandler.reportError(this, re);
		        this._errHandler.recover(this, re);
		    } else {
		    	throw re;
		    }
	    } finally {
	        this.exitRule();
	    }
	    return localctx;
	}


}

OctdatParser.EOF = antlr4.Token.EOF;
OctdatParser.T__0 = 1;
OctdatParser.T__1 = 2;
OctdatParser.T__2 = 3;
OctdatParser.T__3 = 4;
OctdatParser.T__4 = 5;
OctdatParser.T__5 = 6;
OctdatParser.T__6 = 7;
OctdatParser.T__7 = 8;
OctdatParser.T__8 = 9;
OctdatParser.T__9 = 10;
OctdatParser.T__10 = 11;
OctdatParser.T__11 = 12;
OctdatParser.T__12 = 13;
OctdatParser.T__13 = 14;
OctdatParser.T__14 = 15;
OctdatParser.T__15 = 16;
OctdatParser.T__16 = 17;
OctdatParser.T__17 = 18;
OctdatParser.T__18 = 19;
OctdatParser.T__19 = 20;
OctdatParser.T__20 = 21;
OctdatParser.T__21 = 22;
OctdatParser.T__22 = 23;
OctdatParser.T__23 = 24;
OctdatParser.T__24 = 25;
OctdatParser.T__25 = 26;
OctdatParser.T__26 = 27;
OctdatParser.T__27 = 28;
OctdatParser.T__28 = 29;
OctdatParser.T__29 = 30;
OctdatParser.T__30 = 31;
OctdatParser.T__31 = 32;
OctdatParser.T__32 = 33;
OctdatParser.T__33 = 34;
OctdatParser.T__34 = 35;
OctdatParser.T__35 = 36;
OctdatParser.T__36 = 37;
OctdatParser.T__37 = 38;
OctdatParser.T__38 = 39;
OctdatParser.T__39 = 40;
OctdatParser.T__40 = 41;
OctdatParser.T__41 = 42;
OctdatParser.T__42 = 43;
OctdatParser.T__43 = 44;
OctdatParser.T__44 = 45;
OctdatParser.T__45 = 46;
OctdatParser.T__46 = 47;
OctdatParser.T__47 = 48;
OctdatParser.T__48 = 49;
OctdatParser.T__49 = 50;
OctdatParser.T__50 = 51;
OctdatParser.T__51 = 52;
OctdatParser.T__52 = 53;
OctdatParser.T__53 = 54;
OctdatParser.T__54 = 55;
OctdatParser.T__55 = 56;
OctdatParser.T__56 = 57;
OctdatParser.T__57 = 58;
OctdatParser.T__58 = 59;
OctdatParser.T__59 = 60;
OctdatParser.T__60 = 61;
OctdatParser.T__61 = 62;
OctdatParser.T__62 = 63;
OctdatParser.T__63 = 64;
OctdatParser.T__64 = 65;
OctdatParser.T__65 = 66;
OctdatParser.T__66 = 67;
OctdatParser.T__67 = 68;
OctdatParser.T__68 = 69;
OctdatParser.T__69 = 70;
OctdatParser.T__70 = 71;
OctdatParser.T__71 = 72;
OctdatParser.T__72 = 73;
OctdatParser.T__73 = 74;
OctdatParser.T__74 = 75;
OctdatParser.T__75 = 76;
OctdatParser.T__76 = 77;
OctdatParser.T__77 = 78;
OctdatParser.T__78 = 79;
OctdatParser.T__79 = 80;
OctdatParser.T__80 = 81;
OctdatParser.T__81 = 82;
OctdatParser.T__82 = 83;
OctdatParser.T__83 = 84;
OctdatParser.ID = 85;
OctdatParser.STRING = 86;
OctdatParser.NUMBER = 87;
OctdatParser.BOOLEAN = 88;
OctdatParser.COLOR = 89;
OctdatParser.DURATION = 90;
OctdatParser.ASSIGN = 91;
OctdatParser.LBRACE = 92;
OctdatParser.RBRACE = 93;
OctdatParser.LBRACKET = 94;
OctdatParser.RBRACKET = 95;
OctdatParser.LPAREN = 96;
OctdatParser.RPAREN = 97;
OctdatParser.COMMA = 98;
OctdatParser.COLON = 99;
OctdatParser.DOT = 100;
OctdatParser.SLASH = 101;
OctdatParser.WS = 102;

OctdatParser.RULE_octdatFile = 0;
OctdatParser.RULE_objectDefinition = 1;
OctdatParser.RULE_objectBody = 2;
OctdatParser.RULE_objectProperty = 3;
OctdatParser.RULE_idProp = 4;
OctdatParser.RULE_typeProp = 5;
OctdatParser.RULE_inheritProp = 6;
OctdatParser.RULE_aliasProp = 7;
OctdatParser.RULE_nameProp = 8;
OctdatParser.RULE_descriptionProp = 9;
OctdatParser.RULE_iconProp = 10;
OctdatParser.RULE_modifierIconProp = 11;
OctdatParser.RULE_attributesProp = 12;
OctdatParser.RULE_limitProp = 13;
OctdatParser.RULE_activationProp = 14;
OctdatParser.RULE_targetTypeProp = 15;
OctdatParser.RULE_actionsProp = 16;
OctdatParser.RULE_ingredientsProp = 17;
OctdatParser.RULE_colorsProp = 18;
OctdatParser.RULE_prefabProp = 19;
OctdatParser.RULE_consumableModifiersProp = 20;
OctdatParser.RULE_craftAtProp = 21;
OctdatParser.RULE_valueProp = 22;
OctdatParser.RULE_dropSoundProp = 23;
OctdatParser.RULE_carryChanceProp = 24;
OctdatParser.RULE_moodBoostProp = 25;
OctdatParser.RULE_importanceProp = 26;
OctdatParser.RULE_importanceRangeProp = 27;
OctdatParser.RULE_subjectProp = 28;
OctdatParser.RULE_defectiveNounProp = 29;
OctdatParser.RULE_itemClassProp = 30;
OctdatParser.RULE_categoryProp = 31;
OctdatParser.RULE_stackLimitProp = 32;
OctdatParser.RULE_usableStackSizeProp = 33;
OctdatParser.RULE_indoorDecayAfterProp = 34;
OctdatParser.RULE_outdoorDecayAfterProp = 35;
OctdatParser.RULE_temperatureAffectsDecayProp = 36;
OctdatParser.RULE_commandTypeProp = 37;
OctdatParser.RULE_batchProp = 38;
OctdatParser.RULE_abstractProp = 39;
OctdatParser.RULE_cosmeticPrefabProp = 40;
OctdatParser.RULE_equipmentSlotProp = 41;
OctdatParser.RULE_staticBuffsProp = 42;
OctdatParser.RULE_equipmentCosmeticProp = 43;
OctdatParser.RULE_colorSlotsProp = 44;
OctdatParser.RULE_buffScaleProp = 45;
OctdatParser.RULE_statsProp = 46;
OctdatParser.RULE_salvageAtProp = 47;
OctdatParser.RULE_salvageProp = 48;
OctdatParser.RULE_progressMultiplierProp = 49;
OctdatParser.RULE_researchEntryProp = 50;
OctdatParser.RULE_qualityDifficultyProp = 51;
OctdatParser.RULE_skillCurveProp = 52;
OctdatParser.RULE_relatedSubjectProp = 53;
OctdatParser.RULE_forHerbavoreAnimalsProp = 54;
OctdatParser.RULE_dropItemTypeProp = 55;
OctdatParser.RULE_dropItemChanceProp = 56;
OctdatParser.RULE_sharedMaterialsProp = 57;
OctdatParser.RULE_attributeList = 58;
OctdatParser.RULE_attribute = 59;
OctdatParser.RULE_activationBody = 60;
OctdatParser.RULE_targetTypeBody = 61;
OctdatParser.RULE_targetTypeProps = 62;
OctdatParser.RULE_targetTypeRangeProp = 63;
OctdatParser.RULE_targetTypeAutoEnemiesProp = 64;
OctdatParser.RULE_actionList = 65;
OctdatParser.RULE_action = 66;
OctdatParser.RULE_actionBody = 67;
OctdatParser.RULE_actionProps = 68;
OctdatParser.RULE_actionStatusEffectNameProp = 69;
OctdatParser.RULE_actionStatusEffectMinutesProp = 70;
OctdatParser.RULE_actionEffectProp = 71;
OctdatParser.RULE_actionSelfProp = 72;
OctdatParser.RULE_actionStatProp = 73;
OctdatParser.RULE_actionDeltaProp = 74;
OctdatParser.RULE_actionMinutesToMaturityProp = 75;
OctdatParser.RULE_ingredientList = 76;
OctdatParser.RULE_ingredient = 77;
OctdatParser.RULE_ingredientBody = 78;
OctdatParser.RULE_ingredientProps = 79;
OctdatParser.RULE_ingredientFilterProp = 80;
OctdatParser.RULE_ingredientCountProp = 81;
OctdatParser.RULE_colorList = 82;
OctdatParser.RULE_color = 83;
OctdatParser.RULE_prefabBody = 84;
OctdatParser.RULE_prefabProps = 85;
OctdatParser.RULE_prefabPathProp = 86;
OctdatParser.RULE_prefabNameProp = 87;
OctdatParser.RULE_prefabBehaviorProp = 88;
OctdatParser.RULE_prefabPhysicsProp = 89;
OctdatParser.RULE_sharedMaterialsList = 90;
OctdatParser.RULE_sharedMaterialProp = 91;
OctdatParser.RULE_sharedMaterialBody = 92;
OctdatParser.RULE_sharedMaterialProps = 93;
OctdatParser.RULE_sharedMaterialNamesProp = 94;
OctdatParser.RULE_sharedMaterialMaterialProp = 95;
OctdatParser.RULE_nameList = 96;
OctdatParser.RULE_modifierList = 97;
OctdatParser.RULE_modifier = 98;
OctdatParser.RULE_modifierBody = 99;
OctdatParser.RULE_modifierProps = 100;
OctdatParser.RULE_modifierNameProp = 101;
OctdatParser.RULE_modifierDeltaProp = 102;
OctdatParser.RULE_modifierStatNameProp = 103;
OctdatParser.RULE_modifierMultiplierProp = 104;
OctdatParser.RULE_modifierGoodProp = 105;
OctdatParser.RULE_craftAtList = 106;
OctdatParser.RULE_craftAt = 107;
OctdatParser.RULE_staticBuffList = 108;
OctdatParser.RULE_staticBuff = 109;
OctdatParser.RULE_staticBuffBody = 110;
OctdatParser.RULE_staticBuffProps = 111;
OctdatParser.RULE_staticBuffStatNameProp = 112;
OctdatParser.RULE_staticBuffMultiplierProp = 113;
OctdatParser.RULE_staticBuffGoodProp = 114;
OctdatParser.RULE_equipmentCosmeticBody = 115;
OctdatParser.RULE_equipmentCosmeticProps = 116;
OctdatParser.RULE_equipmentCosmeticPrefabProp = 117;
OctdatParser.RULE_equipmentCosmeticMaskMaterialsProp = 118;
OctdatParser.RULE_maskMaterialList = 119;
OctdatParser.RULE_maskMaterial = 120;
OctdatParser.RULE_colorSlotList = 121;
OctdatParser.RULE_colorSlot = 122;
OctdatParser.RULE_colorSlotBody = 123;
OctdatParser.RULE_colorSlotProps = 124;
OctdatParser.RULE_colorSlotNameProp = 125;
OctdatParser.RULE_colorSlotMaterialsProp = 126;
OctdatParser.RULE_colorSlotReferenceProp = 127;
OctdatParser.RULE_materialList = 128;
OctdatParser.RULE_material = 129;
OctdatParser.RULE_statList = 130;
OctdatParser.RULE_stat = 131;
OctdatParser.RULE_statBody = 132;
OctdatParser.RULE_statProps = 133;
OctdatParser.RULE_statNameProp = 134;
OctdatParser.RULE_statFormulaProp = 135;
OctdatParser.RULE_statModifierProp = 136;
OctdatParser.RULE_statMinProp = 137;
OctdatParser.RULE_statMaxProp = 138;
OctdatParser.RULE_salvageList = 139;
OctdatParser.RULE_salvage = 140;
OctdatParser.RULE_salvageBody = 141;
OctdatParser.RULE_salvageProps = 142;
OctdatParser.RULE_salvageItemTypeProp = 143;
OctdatParser.RULE_salvageCountProp = 144;

class OctdatFileContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_octdatFile;
    }

	objectDefinition = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(ObjectDefinitionContext);
	    } else {
	        return this.getTypedRuleContext(ObjectDefinitionContext,i);
	    }
	};


}



class ObjectDefinitionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_objectDefinition;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	objectBody() {
	    return this.getTypedRuleContext(ObjectBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class ObjectBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_objectBody;
    }

	objectProperty = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(ObjectPropertyContext);
	    } else {
	        return this.getTypedRuleContext(ObjectPropertyContext,i);
	    }
	};


}



class ObjectPropertyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_objectProperty;
    }

	idProp() {
	    return this.getTypedRuleContext(IdPropContext,0);
	};

	typeProp() {
	    return this.getTypedRuleContext(TypePropContext,0);
	};

	inheritProp() {
	    return this.getTypedRuleContext(InheritPropContext,0);
	};

	aliasProp() {
	    return this.getTypedRuleContext(AliasPropContext,0);
	};

	nameProp() {
	    return this.getTypedRuleContext(NamePropContext,0);
	};

	descriptionProp() {
	    return this.getTypedRuleContext(DescriptionPropContext,0);
	};

	iconProp() {
	    return this.getTypedRuleContext(IconPropContext,0);
	};

	modifierIconProp() {
	    return this.getTypedRuleContext(ModifierIconPropContext,0);
	};

	attributesProp() {
	    return this.getTypedRuleContext(AttributesPropContext,0);
	};

	limitProp() {
	    return this.getTypedRuleContext(LimitPropContext,0);
	};

	activationProp() {
	    return this.getTypedRuleContext(ActivationPropContext,0);
	};

	targetTypeProp() {
	    return this.getTypedRuleContext(TargetTypePropContext,0);
	};

	actionsProp() {
	    return this.getTypedRuleContext(ActionsPropContext,0);
	};

	ingredientsProp() {
	    return this.getTypedRuleContext(IngredientsPropContext,0);
	};

	colorsProp() {
	    return this.getTypedRuleContext(ColorsPropContext,0);
	};

	prefabProp() {
	    return this.getTypedRuleContext(PrefabPropContext,0);
	};

	consumableModifiersProp() {
	    return this.getTypedRuleContext(ConsumableModifiersPropContext,0);
	};

	craftAtProp() {
	    return this.getTypedRuleContext(CraftAtPropContext,0);
	};

	valueProp() {
	    return this.getTypedRuleContext(ValuePropContext,0);
	};

	dropSoundProp() {
	    return this.getTypedRuleContext(DropSoundPropContext,0);
	};

	carryChanceProp() {
	    return this.getTypedRuleContext(CarryChancePropContext,0);
	};

	moodBoostProp() {
	    return this.getTypedRuleContext(MoodBoostPropContext,0);
	};

	importanceProp() {
	    return this.getTypedRuleContext(ImportancePropContext,0);
	};

	importanceRangeProp() {
	    return this.getTypedRuleContext(ImportanceRangePropContext,0);
	};

	subjectProp() {
	    return this.getTypedRuleContext(SubjectPropContext,0);
	};

	defectiveNounProp() {
	    return this.getTypedRuleContext(DefectiveNounPropContext,0);
	};

	itemClassProp() {
	    return this.getTypedRuleContext(ItemClassPropContext,0);
	};

	categoryProp() {
	    return this.getTypedRuleContext(CategoryPropContext,0);
	};

	stackLimitProp() {
	    return this.getTypedRuleContext(StackLimitPropContext,0);
	};

	usableStackSizeProp() {
	    return this.getTypedRuleContext(UsableStackSizePropContext,0);
	};

	indoorDecayAfterProp() {
	    return this.getTypedRuleContext(IndoorDecayAfterPropContext,0);
	};

	outdoorDecayAfterProp() {
	    return this.getTypedRuleContext(OutdoorDecayAfterPropContext,0);
	};

	temperatureAffectsDecayProp() {
	    return this.getTypedRuleContext(TemperatureAffectsDecayPropContext,0);
	};

	commandTypeProp() {
	    return this.getTypedRuleContext(CommandTypePropContext,0);
	};

	batchProp() {
	    return this.getTypedRuleContext(BatchPropContext,0);
	};

	abstractProp() {
	    return this.getTypedRuleContext(AbstractPropContext,0);
	};

	cosmeticPrefabProp() {
	    return this.getTypedRuleContext(CosmeticPrefabPropContext,0);
	};

	equipmentSlotProp() {
	    return this.getTypedRuleContext(EquipmentSlotPropContext,0);
	};

	staticBuffsProp() {
	    return this.getTypedRuleContext(StaticBuffsPropContext,0);
	};

	equipmentCosmeticProp() {
	    return this.getTypedRuleContext(EquipmentCosmeticPropContext,0);
	};

	colorSlotsProp() {
	    return this.getTypedRuleContext(ColorSlotsPropContext,0);
	};

	buffScaleProp() {
	    return this.getTypedRuleContext(BuffScalePropContext,0);
	};

	statsProp() {
	    return this.getTypedRuleContext(StatsPropContext,0);
	};

	salvageAtProp() {
	    return this.getTypedRuleContext(SalvageAtPropContext,0);
	};

	salvageProp() {
	    return this.getTypedRuleContext(SalvagePropContext,0);
	};

	progressMultiplierProp() {
	    return this.getTypedRuleContext(ProgressMultiplierPropContext,0);
	};

	researchEntryProp() {
	    return this.getTypedRuleContext(ResearchEntryPropContext,0);
	};

	qualityDifficultyProp() {
	    return this.getTypedRuleContext(QualityDifficultyPropContext,0);
	};

	skillCurveProp() {
	    return this.getTypedRuleContext(SkillCurvePropContext,0);
	};

	relatedSubjectProp() {
	    return this.getTypedRuleContext(RelatedSubjectPropContext,0);
	};

	forHerbavoreAnimalsProp() {
	    return this.getTypedRuleContext(ForHerbavoreAnimalsPropContext,0);
	};

	dropItemTypeProp() {
	    return this.getTypedRuleContext(DropItemTypePropContext,0);
	};

	dropItemChanceProp() {
	    return this.getTypedRuleContext(DropItemChancePropContext,0);
	};

	sharedMaterialsProp() {
	    return this.getTypedRuleContext(SharedMaterialsPropContext,0);
	};


}



class IdPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_idProp;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class TypePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_typeProp;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class InheritPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_inheritProp;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class AliasPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_aliasProp;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class NamePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_nameProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class DescriptionPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_descriptionProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class IconPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_iconProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class ModifierIconPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierIconProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class AttributesPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_attributesProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	attributeList() {
	    return this.getTypedRuleContext(AttributeListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class LimitPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_limitProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ActivationPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_activationProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	activationBody() {
	    return this.getTypedRuleContext(ActivationBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class TargetTypePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_targetTypeProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	targetTypeBody() {
	    return this.getTypedRuleContext(TargetTypeBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class ActionsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	actionList() {
	    return this.getTypedRuleContext(ActionListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class IngredientsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_ingredientsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	ingredientList() {
	    return this.getTypedRuleContext(IngredientListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class ColorsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	colorList() {
	    return this.getTypedRuleContext(ColorListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class PrefabPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_prefabProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	prefabBody() {
	    return this.getTypedRuleContext(PrefabBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class ConsumableModifiersPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_consumableModifiersProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	modifierList() {
	    return this.getTypedRuleContext(ModifierListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class CraftAtPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_craftAtProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	craftAtList() {
	    return this.getTypedRuleContext(CraftAtListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class ValuePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_valueProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class DropSoundPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_dropSoundProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class CarryChancePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_carryChanceProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class MoodBoostPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_moodBoostProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ImportancePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_importanceProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ImportanceRangePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_importanceRangeProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class SubjectPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_subjectProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class DefectiveNounPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_defectiveNounProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class ItemClassPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_itemClassProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class CategoryPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_categoryProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class StackLimitPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_stackLimitProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class UsableStackSizePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_usableStackSizeProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class IndoorDecayAfterPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_indoorDecayAfterProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	DURATION() {
	    return this.getToken(OctdatParser.DURATION, 0);
	};


}



class OutdoorDecayAfterPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_outdoorDecayAfterProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	DURATION() {
	    return this.getToken(OctdatParser.DURATION, 0);
	};


}



class TemperatureAffectsDecayPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_temperatureAffectsDecayProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class CommandTypePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_commandTypeProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class BatchPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_batchProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class AbstractPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_abstractProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class CosmeticPrefabPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_cosmeticPrefabProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class EquipmentSlotPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_equipmentSlotProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class StaticBuffsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_staticBuffsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	staticBuffList() {
	    return this.getTypedRuleContext(StaticBuffListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class EquipmentCosmeticPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_equipmentCosmeticProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	equipmentCosmeticBody() {
	    return this.getTypedRuleContext(EquipmentCosmeticBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class ColorSlotsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorSlotsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	colorSlotList() {
	    return this.getTypedRuleContext(ColorSlotListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class BuffScalePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_buffScaleProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class StatsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	statList() {
	    return this.getTypedRuleContext(StatListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class SalvageAtPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_salvageAtProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class SalvagePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_salvageProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	salvageList() {
	    return this.getTypedRuleContext(SalvageListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class ProgressMultiplierPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_progressMultiplierProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ResearchEntryPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_researchEntryProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class QualityDifficultyPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_qualityDifficultyProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class SkillCurvePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_skillCurveProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class RelatedSubjectPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_relatedSubjectProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class ForHerbavoreAnimalsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_forHerbavoreAnimalsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class DropItemTypePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_dropItemTypeProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class DropItemChancePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_dropItemChanceProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class SharedMaterialsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_sharedMaterialsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	sharedMaterialsList() {
	    return this.getTypedRuleContext(SharedMaterialsListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class AttributeListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_attributeList;
    }

	attribute = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(AttributeContext);
	    } else {
	        return this.getTypedRuleContext(AttributeContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class AttributeContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_attribute;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class ActivationBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_activationBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	ASSIGN = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.ASSIGN);
	    } else {
	        return this.getToken(OctdatParser.ASSIGN, i);
	    }
	};


	NUMBER = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.NUMBER);
	    } else {
	        return this.getToken(OctdatParser.NUMBER, i);
	    }
	};



}



class TargetTypeBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_targetTypeBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	targetTypeProps() {
	    return this.getTypedRuleContext(TargetTypePropsContext,0);
	};


}



class TargetTypePropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_targetTypeProps;
    }

	targetTypeRangeProp() {
	    return this.getTypedRuleContext(TargetTypeRangePropContext,0);
	};

	targetTypeAutoEnemiesProp() {
	    return this.getTypedRuleContext(TargetTypeAutoEnemiesPropContext,0);
	};


}



class TargetTypeRangePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_targetTypeRangeProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class TargetTypeAutoEnemiesPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_targetTypeAutoEnemiesProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class ActionListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionList;
    }

	action = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(ActionContext);
	    } else {
	        return this.getTypedRuleContext(ActionContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class ActionContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_action;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	actionBody() {
	    return this.getTypedRuleContext(ActionBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class ActionBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	actionProps() {
	    return this.getTypedRuleContext(ActionPropsContext,0);
	};


}



class ActionPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionProps;
    }

	actionStatusEffectNameProp() {
	    return this.getTypedRuleContext(ActionStatusEffectNamePropContext,0);
	};

	actionStatusEffectMinutesProp() {
	    return this.getTypedRuleContext(ActionStatusEffectMinutesPropContext,0);
	};

	actionEffectProp() {
	    return this.getTypedRuleContext(ActionEffectPropContext,0);
	};

	actionSelfProp() {
	    return this.getTypedRuleContext(ActionSelfPropContext,0);
	};

	actionStatProp() {
	    return this.getTypedRuleContext(ActionStatPropContext,0);
	};

	actionDeltaProp() {
	    return this.getTypedRuleContext(ActionDeltaPropContext,0);
	};

	actionMinutesToMaturityProp() {
	    return this.getTypedRuleContext(ActionMinutesToMaturityPropContext,0);
	};


}



class ActionStatusEffectNamePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionStatusEffectNameProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class ActionStatusEffectMinutesPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionStatusEffectMinutesProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ActionEffectPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionEffectProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class ActionSelfPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionSelfProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class ActionStatPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionStatProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class ActionDeltaPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionDeltaProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ActionMinutesToMaturityPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_actionMinutesToMaturityProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class IngredientListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_ingredientList;
    }

	ingredient = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(IngredientContext);
	    } else {
	        return this.getTypedRuleContext(IngredientContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class IngredientContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_ingredient;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	ingredientBody() {
	    return this.getTypedRuleContext(IngredientBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class IngredientBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_ingredientBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	ingredientProps() {
	    return this.getTypedRuleContext(IngredientPropsContext,0);
	};


}



class IngredientPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_ingredientProps;
    }

	ingredientFilterProp() {
	    return this.getTypedRuleContext(IngredientFilterPropContext,0);
	};

	ingredientCountProp() {
	    return this.getTypedRuleContext(IngredientCountPropContext,0);
	};


}



class IngredientFilterPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_ingredientFilterProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class IngredientCountPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_ingredientCountProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ColorListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorList;
    }

	color = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(ColorContext);
	    } else {
	        return this.getTypedRuleContext(ColorContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class ColorContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_color;
    }

	LPAREN() {
	    return this.getToken(OctdatParser.LPAREN, 0);
	};

	COLOR() {
	    return this.getToken(OctdatParser.COLOR, 0);
	};

	RPAREN() {
	    return this.getToken(OctdatParser.RPAREN, 0);
	};


}



class PrefabBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_prefabBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	prefabProps() {
	    return this.getTypedRuleContext(PrefabPropsContext,0);
	};


}



class PrefabPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_prefabProps;
    }

	prefabPathProp() {
	    return this.getTypedRuleContext(PrefabPathPropContext,0);
	};

	prefabNameProp() {
	    return this.getTypedRuleContext(PrefabNamePropContext,0);
	};

	prefabBehaviorProp() {
	    return this.getTypedRuleContext(PrefabBehaviorPropContext,0);
	};

	prefabPhysicsProp() {
	    return this.getTypedRuleContext(PrefabPhysicsPropContext,0);
	};

	sharedMaterialProp() {
	    return this.getTypedRuleContext(SharedMaterialPropContext,0);
	};


}



class PrefabPathPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_prefabPathProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class PrefabNamePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_prefabNameProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class PrefabBehaviorPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_prefabBehaviorProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class PrefabPhysicsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_prefabPhysicsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class SharedMaterialsListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_sharedMaterialsList;
    }

	sharedMaterialProp = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(SharedMaterialPropContext);
	    } else {
	        return this.getTypedRuleContext(SharedMaterialPropContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class SharedMaterialPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_sharedMaterialProp;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	sharedMaterialBody() {
	    return this.getTypedRuleContext(SharedMaterialBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class SharedMaterialBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_sharedMaterialBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	sharedMaterialProps() {
	    return this.getTypedRuleContext(SharedMaterialPropsContext,0);
	};


}



class SharedMaterialPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_sharedMaterialProps;
    }

	sharedMaterialNamesProp() {
	    return this.getTypedRuleContext(SharedMaterialNamesPropContext,0);
	};

	sharedMaterialMaterialProp() {
	    return this.getTypedRuleContext(SharedMaterialMaterialPropContext,0);
	};


}



class SharedMaterialNamesPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_sharedMaterialNamesProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	nameList() {
	    return this.getTypedRuleContext(NameListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class SharedMaterialMaterialPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_sharedMaterialMaterialProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class NameListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_nameList;
    }

	STRING = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.STRING);
	    } else {
	        return this.getToken(OctdatParser.STRING, i);
	    }
	};


	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class ModifierListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierList;
    }

	modifier = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(ModifierContext);
	    } else {
	        return this.getTypedRuleContext(ModifierContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class ModifierContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifier;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	modifierBody() {
	    return this.getTypedRuleContext(ModifierBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class ModifierBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	modifierProps() {
	    return this.getTypedRuleContext(ModifierPropsContext,0);
	};


}



class ModifierPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierProps;
    }

	modifierNameProp() {
	    return this.getTypedRuleContext(ModifierNamePropContext,0);
	};

	modifierDeltaProp() {
	    return this.getTypedRuleContext(ModifierDeltaPropContext,0);
	};

	modifierStatNameProp() {
	    return this.getTypedRuleContext(ModifierStatNamePropContext,0);
	};

	modifierMultiplierProp() {
	    return this.getTypedRuleContext(ModifierMultiplierPropContext,0);
	};

	modifierGoodProp() {
	    return this.getTypedRuleContext(ModifierGoodPropContext,0);
	};


}



class ModifierNamePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierNameProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class ModifierDeltaPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierDeltaProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ModifierStatNamePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierStatNameProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class ModifierMultiplierPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierMultiplierProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class ModifierGoodPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_modifierGoodProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class CraftAtListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_craftAtList;
    }

	craftAt = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(CraftAtContext);
	    } else {
	        return this.getTypedRuleContext(CraftAtContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class CraftAtContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_craftAt;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class StaticBuffListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_staticBuffList;
    }

	staticBuff = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(StaticBuffContext);
	    } else {
	        return this.getTypedRuleContext(StaticBuffContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class StaticBuffContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_staticBuff;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	staticBuffBody() {
	    return this.getTypedRuleContext(StaticBuffBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class StaticBuffBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_staticBuffBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	staticBuffProps() {
	    return this.getTypedRuleContext(StaticBuffPropsContext,0);
	};


}



class StaticBuffPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_staticBuffProps;
    }

	staticBuffStatNameProp() {
	    return this.getTypedRuleContext(StaticBuffStatNamePropContext,0);
	};

	staticBuffMultiplierProp() {
	    return this.getTypedRuleContext(StaticBuffMultiplierPropContext,0);
	};

	staticBuffGoodProp() {
	    return this.getTypedRuleContext(StaticBuffGoodPropContext,0);
	};


}



class StaticBuffStatNamePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_staticBuffStatNameProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class StaticBuffMultiplierPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_staticBuffMultiplierProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class StaticBuffGoodPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_staticBuffGoodProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class EquipmentCosmeticBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_equipmentCosmeticBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	equipmentCosmeticProps() {
	    return this.getTypedRuleContext(EquipmentCosmeticPropsContext,0);
	};


}



class EquipmentCosmeticPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_equipmentCosmeticProps;
    }

	equipmentCosmeticPrefabProp() {
	    return this.getTypedRuleContext(EquipmentCosmeticPrefabPropContext,0);
	};

	equipmentCosmeticMaskMaterialsProp() {
	    return this.getTypedRuleContext(EquipmentCosmeticMaskMaterialsPropContext,0);
	};


}



class EquipmentCosmeticPrefabPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_equipmentCosmeticPrefabProp;
    }

	prefabProp() {
	    return this.getTypedRuleContext(PrefabPropContext,0);
	};


}



class EquipmentCosmeticMaskMaterialsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_equipmentCosmeticMaskMaterialsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	maskMaterialList() {
	    return this.getTypedRuleContext(MaskMaterialListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class MaskMaterialListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_maskMaterialList;
    }

	maskMaterial = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MaskMaterialContext);
	    } else {
	        return this.getTypedRuleContext(MaskMaterialContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class MaskMaterialContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_maskMaterial;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class ColorSlotListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorSlotList;
    }

	colorSlot = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(ColorSlotContext);
	    } else {
	        return this.getTypedRuleContext(ColorSlotContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class ColorSlotContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorSlot;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	colorSlotBody() {
	    return this.getTypedRuleContext(ColorSlotBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class ColorSlotBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorSlotBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	colorSlotProps() {
	    return this.getTypedRuleContext(ColorSlotPropsContext,0);
	};


}



class ColorSlotPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorSlotProps;
    }

	colorSlotNameProp() {
	    return this.getTypedRuleContext(ColorSlotNamePropContext,0);
	};

	colorSlotMaterialsProp() {
	    return this.getTypedRuleContext(ColorSlotMaterialsPropContext,0);
	};

	colorSlotReferenceProp() {
	    return this.getTypedRuleContext(ColorSlotReferencePropContext,0);
	};


}



class ColorSlotNamePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorSlotNameProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	STRING() {
	    return this.getToken(OctdatParser.STRING, 0);
	};


}



class ColorSlotMaterialsPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorSlotMaterialsProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	LBRACKET() {
	    return this.getToken(OctdatParser.LBRACKET, 0);
	};

	materialList() {
	    return this.getTypedRuleContext(MaterialListContext,0);
	};

	RBRACKET() {
	    return this.getToken(OctdatParser.RBRACKET, 0);
	};


}



class ColorSlotReferencePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_colorSlotReferenceProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class MaterialListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_materialList;
    }

	material = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(MaterialContext);
	    } else {
	        return this.getTypedRuleContext(MaterialContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class MaterialContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_material;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class StatListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statList;
    }

	stat = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(StatContext);
	    } else {
	        return this.getTypedRuleContext(StatContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class StatContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_stat;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	statBody() {
	    return this.getTypedRuleContext(StatBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class StatBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	statProps() {
	    return this.getTypedRuleContext(StatPropsContext,0);
	};


}



class StatPropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statProps;
    }

	statNameProp() {
	    return this.getTypedRuleContext(StatNamePropContext,0);
	};

	statFormulaProp() {
	    return this.getTypedRuleContext(StatFormulaPropContext,0);
	};

	statModifierProp() {
	    return this.getTypedRuleContext(StatModifierPropContext,0);
	};

	statMinProp() {
	    return this.getTypedRuleContext(StatMinPropContext,0);
	};

	statMaxProp() {
	    return this.getTypedRuleContext(StatMaxPropContext,0);
	};


}



class StatNamePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statNameProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class StatFormulaPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statFormulaProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class StatModifierPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statModifierProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	BOOLEAN() {
	    return this.getToken(OctdatParser.BOOLEAN, 0);
	};


}



class StatMinPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statMinProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class StatMaxPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_statMaxProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}



class SalvageListContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_salvageList;
    }

	salvage = function(i) {
	    if(i===undefined) {
	        i = null;
	    }
	    if(i===null) {
	        return this.getTypedRuleContexts(SalvageContext);
	    } else {
	        return this.getTypedRuleContext(SalvageContext,i);
	    }
	};

	COMMA = function(i) {
		if(i===undefined) {
			i = null;
		}
	    if(i===null) {
	        return this.getTokens(OctdatParser.COMMA);
	    } else {
	        return this.getToken(OctdatParser.COMMA, i);
	    }
	};



}



class SalvageContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_salvage;
    }

	LBRACE() {
	    return this.getToken(OctdatParser.LBRACE, 0);
	};

	salvageBody() {
	    return this.getTypedRuleContext(SalvageBodyContext,0);
	};

	RBRACE() {
	    return this.getToken(OctdatParser.RBRACE, 0);
	};


}



class SalvageBodyContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_salvageBody;
    }

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};

	salvageProps() {
	    return this.getTypedRuleContext(SalvagePropsContext,0);
	};


}



class SalvagePropsContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_salvageProps;
    }

	salvageItemTypeProp() {
	    return this.getTypedRuleContext(SalvageItemTypePropContext,0);
	};

	salvageCountProp() {
	    return this.getTypedRuleContext(SalvageCountPropContext,0);
	};


}



class SalvageItemTypePropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_salvageItemTypeProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	ID() {
	    return this.getToken(OctdatParser.ID, 0);
	};


}



class SalvageCountPropContext extends antlr4.ParserRuleContext {

    constructor(parser, parent, invokingState) {
        if(parent===undefined) {
            parent = null;
        }
        if(invokingState===undefined || invokingState===null) {
            invokingState = -1;
        }
        super(parent, invokingState);
        this.parser = parser;
        this.ruleIndex = OctdatParser.RULE_salvageCountProp;
    }

	ASSIGN() {
	    return this.getToken(OctdatParser.ASSIGN, 0);
	};

	NUMBER() {
	    return this.getToken(OctdatParser.NUMBER, 0);
	};


}




OctdatParser.OctdatFileContext = OctdatFileContext; 
OctdatParser.ObjectDefinitionContext = ObjectDefinitionContext; 
OctdatParser.ObjectBodyContext = ObjectBodyContext; 
OctdatParser.ObjectPropertyContext = ObjectPropertyContext; 
OctdatParser.IdPropContext = IdPropContext; 
OctdatParser.TypePropContext = TypePropContext; 
OctdatParser.InheritPropContext = InheritPropContext; 
OctdatParser.AliasPropContext = AliasPropContext; 
OctdatParser.NamePropContext = NamePropContext; 
OctdatParser.DescriptionPropContext = DescriptionPropContext; 
OctdatParser.IconPropContext = IconPropContext; 
OctdatParser.ModifierIconPropContext = ModifierIconPropContext; 
OctdatParser.AttributesPropContext = AttributesPropContext; 
OctdatParser.LimitPropContext = LimitPropContext; 
OctdatParser.ActivationPropContext = ActivationPropContext; 
OctdatParser.TargetTypePropContext = TargetTypePropContext; 
OctdatParser.ActionsPropContext = ActionsPropContext; 
OctdatParser.IngredientsPropContext = IngredientsPropContext; 
OctdatParser.ColorsPropContext = ColorsPropContext; 
OctdatParser.PrefabPropContext = PrefabPropContext; 
OctdatParser.ConsumableModifiersPropContext = ConsumableModifiersPropContext; 
OctdatParser.CraftAtPropContext = CraftAtPropContext; 
OctdatParser.ValuePropContext = ValuePropContext; 
OctdatParser.DropSoundPropContext = DropSoundPropContext; 
OctdatParser.CarryChancePropContext = CarryChancePropContext; 
OctdatParser.MoodBoostPropContext = MoodBoostPropContext; 
OctdatParser.ImportancePropContext = ImportancePropContext; 
OctdatParser.ImportanceRangePropContext = ImportanceRangePropContext; 
OctdatParser.SubjectPropContext = SubjectPropContext; 
OctdatParser.DefectiveNounPropContext = DefectiveNounPropContext; 
OctdatParser.ItemClassPropContext = ItemClassPropContext; 
OctdatParser.CategoryPropContext = CategoryPropContext; 
OctdatParser.StackLimitPropContext = StackLimitPropContext; 
OctdatParser.UsableStackSizePropContext = UsableStackSizePropContext; 
OctdatParser.IndoorDecayAfterPropContext = IndoorDecayAfterPropContext; 
OctdatParser.OutdoorDecayAfterPropContext = OutdoorDecayAfterPropContext; 
OctdatParser.TemperatureAffectsDecayPropContext = TemperatureAffectsDecayPropContext; 
OctdatParser.CommandTypePropContext = CommandTypePropContext; 
OctdatParser.BatchPropContext = BatchPropContext; 
OctdatParser.AbstractPropContext = AbstractPropContext; 
OctdatParser.CosmeticPrefabPropContext = CosmeticPrefabPropContext; 
OctdatParser.EquipmentSlotPropContext = EquipmentSlotPropContext; 
OctdatParser.StaticBuffsPropContext = StaticBuffsPropContext; 
OctdatParser.EquipmentCosmeticPropContext = EquipmentCosmeticPropContext; 
OctdatParser.ColorSlotsPropContext = ColorSlotsPropContext; 
OctdatParser.BuffScalePropContext = BuffScalePropContext; 
OctdatParser.StatsPropContext = StatsPropContext; 
OctdatParser.SalvageAtPropContext = SalvageAtPropContext; 
OctdatParser.SalvagePropContext = SalvagePropContext; 
OctdatParser.ProgressMultiplierPropContext = ProgressMultiplierPropContext; 
OctdatParser.ResearchEntryPropContext = ResearchEntryPropContext; 
OctdatParser.QualityDifficultyPropContext = QualityDifficultyPropContext; 
OctdatParser.SkillCurvePropContext = SkillCurvePropContext; 
OctdatParser.RelatedSubjectPropContext = RelatedSubjectPropContext; 
OctdatParser.ForHerbavoreAnimalsPropContext = ForHerbavoreAnimalsPropContext; 
OctdatParser.DropItemTypePropContext = DropItemTypePropContext; 
OctdatParser.DropItemChancePropContext = DropItemChancePropContext; 
OctdatParser.SharedMaterialsPropContext = SharedMaterialsPropContext; 
OctdatParser.AttributeListContext = AttributeListContext; 
OctdatParser.AttributeContext = AttributeContext; 
OctdatParser.ActivationBodyContext = ActivationBodyContext; 
OctdatParser.TargetTypeBodyContext = TargetTypeBodyContext; 
OctdatParser.TargetTypePropsContext = TargetTypePropsContext; 
OctdatParser.TargetTypeRangePropContext = TargetTypeRangePropContext; 
OctdatParser.TargetTypeAutoEnemiesPropContext = TargetTypeAutoEnemiesPropContext; 
OctdatParser.ActionListContext = ActionListContext; 
OctdatParser.ActionContext = ActionContext; 
OctdatParser.ActionBodyContext = ActionBodyContext; 
OctdatParser.ActionPropsContext = ActionPropsContext; 
OctdatParser.ActionStatusEffectNamePropContext = ActionStatusEffectNamePropContext; 
OctdatParser.ActionStatusEffectMinutesPropContext = ActionStatusEffectMinutesPropContext; 
OctdatParser.ActionEffectPropContext = ActionEffectPropContext; 
OctdatParser.ActionSelfPropContext = ActionSelfPropContext; 
OctdatParser.ActionStatPropContext = ActionStatPropContext; 
OctdatParser.ActionDeltaPropContext = ActionDeltaPropContext; 
OctdatParser.ActionMinutesToMaturityPropContext = ActionMinutesToMaturityPropContext; 
OctdatParser.IngredientListContext = IngredientListContext; 
OctdatParser.IngredientContext = IngredientContext; 
OctdatParser.IngredientBodyContext = IngredientBodyContext; 
OctdatParser.IngredientPropsContext = IngredientPropsContext; 
OctdatParser.IngredientFilterPropContext = IngredientFilterPropContext; 
OctdatParser.IngredientCountPropContext = IngredientCountPropContext; 
OctdatParser.ColorListContext = ColorListContext; 
OctdatParser.ColorContext = ColorContext; 
OctdatParser.PrefabBodyContext = PrefabBodyContext; 
OctdatParser.PrefabPropsContext = PrefabPropsContext; 
OctdatParser.PrefabPathPropContext = PrefabPathPropContext; 
OctdatParser.PrefabNamePropContext = PrefabNamePropContext; 
OctdatParser.PrefabBehaviorPropContext = PrefabBehaviorPropContext; 
OctdatParser.PrefabPhysicsPropContext = PrefabPhysicsPropContext; 
OctdatParser.SharedMaterialsListContext = SharedMaterialsListContext; 
OctdatParser.SharedMaterialPropContext = SharedMaterialPropContext; 
OctdatParser.SharedMaterialBodyContext = SharedMaterialBodyContext; 
OctdatParser.SharedMaterialPropsContext = SharedMaterialPropsContext; 
OctdatParser.SharedMaterialNamesPropContext = SharedMaterialNamesPropContext; 
OctdatParser.SharedMaterialMaterialPropContext = SharedMaterialMaterialPropContext; 
OctdatParser.NameListContext = NameListContext; 
OctdatParser.ModifierListContext = ModifierListContext; 
OctdatParser.ModifierContext = ModifierContext; 
OctdatParser.ModifierBodyContext = ModifierBodyContext; 
OctdatParser.ModifierPropsContext = ModifierPropsContext; 
OctdatParser.ModifierNamePropContext = ModifierNamePropContext; 
OctdatParser.ModifierDeltaPropContext = ModifierDeltaPropContext; 
OctdatParser.ModifierStatNamePropContext = ModifierStatNamePropContext; 
OctdatParser.ModifierMultiplierPropContext = ModifierMultiplierPropContext; 
OctdatParser.ModifierGoodPropContext = ModifierGoodPropContext; 
OctdatParser.CraftAtListContext = CraftAtListContext; 
OctdatParser.CraftAtContext = CraftAtContext; 
OctdatParser.StaticBuffListContext = StaticBuffListContext; 
OctdatParser.StaticBuffContext = StaticBuffContext; 
OctdatParser.StaticBuffBodyContext = StaticBuffBodyContext; 
OctdatParser.StaticBuffPropsContext = StaticBuffPropsContext; 
OctdatParser.StaticBuffStatNamePropContext = StaticBuffStatNamePropContext; 
OctdatParser.StaticBuffMultiplierPropContext = StaticBuffMultiplierPropContext; 
OctdatParser.StaticBuffGoodPropContext = StaticBuffGoodPropContext; 
OctdatParser.EquipmentCosmeticBodyContext = EquipmentCosmeticBodyContext; 
OctdatParser.EquipmentCosmeticPropsContext = EquipmentCosmeticPropsContext; 
OctdatParser.EquipmentCosmeticPrefabPropContext = EquipmentCosmeticPrefabPropContext; 
OctdatParser.EquipmentCosmeticMaskMaterialsPropContext = EquipmentCosmeticMaskMaterialsPropContext; 
OctdatParser.MaskMaterialListContext = MaskMaterialListContext; 
OctdatParser.MaskMaterialContext = MaskMaterialContext; 
OctdatParser.ColorSlotListContext = ColorSlotListContext; 
OctdatParser.ColorSlotContext = ColorSlotContext; 
OctdatParser.ColorSlotBodyContext = ColorSlotBodyContext; 
OctdatParser.ColorSlotPropsContext = ColorSlotPropsContext; 
OctdatParser.ColorSlotNamePropContext = ColorSlotNamePropContext; 
OctdatParser.ColorSlotMaterialsPropContext = ColorSlotMaterialsPropContext; 
OctdatParser.ColorSlotReferencePropContext = ColorSlotReferencePropContext; 
OctdatParser.MaterialListContext = MaterialListContext; 
OctdatParser.MaterialContext = MaterialContext; 
OctdatParser.StatListContext = StatListContext; 
OctdatParser.StatContext = StatContext; 
OctdatParser.StatBodyContext = StatBodyContext; 
OctdatParser.StatPropsContext = StatPropsContext; 
OctdatParser.StatNamePropContext = StatNamePropContext; 
OctdatParser.StatFormulaPropContext = StatFormulaPropContext; 
OctdatParser.StatModifierPropContext = StatModifierPropContext; 
OctdatParser.StatMinPropContext = StatMinPropContext; 
OctdatParser.StatMaxPropContext = StatMaxPropContext; 
OctdatParser.SalvageListContext = SalvageListContext; 
OctdatParser.SalvageContext = SalvageContext; 
OctdatParser.SalvageBodyContext = SalvageBodyContext; 
OctdatParser.SalvagePropsContext = SalvagePropsContext; 
OctdatParser.SalvageItemTypePropContext = SalvageItemTypePropContext; 
OctdatParser.SalvageCountPropContext = SalvageCountPropContext; 
